{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-card_5-ios.entry.js"],"names":["Card","hostRef","button","type","disabled","routerDirection","href","undefined","mode","Object","assign","color","isClickable","clickable","TagType","attrs","download","rel","target","onClick","ev","hostData","__stencil_render","CardContent","CardHeader","translucent","CardSubtitle","CardTitle"],"mappings":"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","file":"16-es5.js","sourcesContent":["import { r as registerInstance, d as getIonMode, h, H as Host } from './chunk-84f6bf13.js';\nimport './chunk-1074393c.js';\nimport { c as createColorClasses, o as openURL } from './chunk-ba834eff.js';\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nclass Card {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * If `true`, a button tag will be rendered and the card will be tappable.\n         */\n        this.button = false;\n        /**\n         * The type of the button. Only used when an `onclick` or `button` property is present.\n         */\n        this.type = 'button';\n        /**\n         * If `true`, the user cannot interact with the card.\n         */\n        this.disabled = false;\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n    }\n    isClickable() {\n        return (this.href !== undefined || this.button);\n    }\n    hostData() {\n        const mode = getIonMode(this);\n        return {\n            class: Object.assign({ [mode]: true }, createColorClasses(this.color), { 'card-disabled': this.disabled, 'ion-activatable': this.isClickable() })\n        };\n    }\n    __stencil_render() {\n        const clickable = this.isClickable();\n        if (!clickable) {\n            return [\n                h(\"slot\", null)\n            ];\n        }\n        const mode = getIonMode(this);\n        const { href, routerDirection } = this;\n        const TagType = clickable ? (href === undefined ? 'button' : 'a') : 'div';\n        const attrs = (TagType === 'button')\n            ? { type: this.type }\n            : {\n                download: this.download,\n                href: this.href,\n                rel: this.rel,\n                target: this.target\n            };\n        return (h(TagType, Object.assign({}, attrs, { class: \"card-native\", disabled: this.disabled, onClick: (ev) => openURL(href, ev, routerDirection) }), h(\"slot\", null), clickable && mode === 'md' && h(\"ion-ripple-effect\", null)));\n    }\n    render() { return h(Host, this.hostData(), this.__stencil_render()); }\n    static get style() { return \".sc-ion-card-ios-h{--ion-safe-area-left:0px;--ion-safe-area-right:0px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:block;position:relative;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);overflow:hidden}.ion-color.sc-ion-card-ios-h{background:var(--ion-color-base)}.ion-color.sc-ion-card-ios-h, .sc-ion-card-ios-h.ion-color.sc-ion-card-ios-s  ion-card-header , .sc-ion-card-ios-h.ion-color.sc-ion-card-ios-s  ion-card-subtitle , .sc-ion-card-ios-h.ion-color.sc-ion-card-ios-s  ion-card-title {color:var(--ion-color-contrast)}.sc-ion-card-ios-s  img {display:block;width:100%}.sc-ion-card-ios-s  ion-list {margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}.card-disabled.sc-ion-card-ios-h{cursor:default;opacity:.3;pointer-events:none}.card-native.sc-ion-card-ios{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:block;width:100%;min-height:var(--min-height);-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);outline:none;background:var(--background)}.card-native.sc-ion-card-ios::-moz-focus-inner{border:0}a.sc-ion-card-ios, button.sc-ion-card-ios{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-user-drag:none}ion-ripple-effect.sc-ion-card-ios{color:var(--ripple-color)}.sc-ion-card-ios-h{--background:var(--ion-item-background,transparent);--color:var(--ion-color-step-600,#666);margin-left:16px;margin-right:16px;margin-top:24px;margin-bottom:24px;border-radius:8px;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-transition:-webkit-transform .5s cubic-bezier(.12,.72,.29,1);transition:-webkit-transform .5s cubic-bezier(.12,.72,.29,1);transition:transform .5s cubic-bezier(.12,.72,.29,1);transition:transform .5s cubic-bezier(.12,.72,.29,1),-webkit-transform .5s cubic-bezier(.12,.72,.29,1);font-size:14px;-webkit-box-shadow:0 4px 16px rgba(0,0,0,.12);box-shadow:0 4px 16px rgba(0,0,0,.12)}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.sc-ion-card-ios-h{margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}.activated.sc-ion-card-ios-h{-webkit-transform:scale3d(.97,.97,1);transform:scale3d(.97,.97,1)}\"; }\n}\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nclass CardContent {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    hostData() {\n        const mode = getIonMode(this);\n        return {\n            class: {\n                [mode]: true,\n                // Used internally for styling\n                [`card-content-${mode}`]: true\n            }\n        };\n    }\n    render() { return h(Host, this.hostData()); }\n    static get style() { return \"ion-card-content{display:block;position:relative}.card-content-ios{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:20px;font-size:16px;line-height:1.4}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.card-content-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}.card-content-ios h1{margin-left:0;margin-right:0;margin-top:0;margin-bottom:2px;font-size:24px;font-weight:400}.card-content-ios h2{margin-left:0;margin-right:0;margin-top:2px;margin-bottom:2px;font-size:16px;font-weight:400}.card-content-ios h3,.card-content-ios h4,.card-content-ios h5,.card-content-ios h6{margin-left:0;margin-right:0;margin-top:2px;margin-bottom:2px;font-size:14px;font-weight:400}.card-content-ios p{margin-left:0;margin-right:0;margin-top:0;margin-bottom:2px;font-size:14px}\"; }\n}\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nclass CardHeader {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * If `true`, the card header will be translucent.\n         * Only applies when the mode is `\"ios\"` and the device supports\n         * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\n         */\n        this.translucent = false;\n    }\n    hostData() {\n        const mode = getIonMode(this);\n        return {\n            class: Object.assign({}, createColorClasses(this.color), { 'card-header-translucent': this.translucent, [mode]: true })\n        };\n    }\n    __stencil_render() {\n        return h(\"slot\", null);\n    }\n    render() { return h(Host, this.hostData(), this.__stencil_render()); }\n    static get style() { return \":host{display:block;position:relative;background:var(--background);color:var(--color)}:host(.ion-color){background:var(--ion-color-base);color:var(--ion-color-contrast)}:host(.ion-color) ::slotted(ion-card-subtitle),:host(.ion-color) ::slotted(ion-card-title){color:currentColor}:host{padding-left:20px;padding-right:20px;padding-top:20px;padding-bottom:16px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px}}\\@supports ((-webkit-backdrop-filter:blur(0)) or (backdrop-filter:blur(0))){:host(.card-header-translucent){background-color:rgba(var(--ion-background-color-rgb,255,255,255),.9);-webkit-backdrop-filter:saturate(180%) blur(30px);backdrop-filter:saturate(180%) blur(30px)}}\"; }\n}\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nclass CardSubtitle {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    hostData() {\n        const mode = getIonMode(this);\n        return {\n            class: Object.assign({}, createColorClasses(this.color), { [mode]: true }),\n            'role': 'heading',\n            'aria-level': '3'\n        };\n    }\n    __stencil_render() {\n        return h(\"slot\", null);\n    }\n    render() { return h(Host, this.hostData(), this.__stencil_render()); }\n    static get style() { return \":host{display:block;position:relative;color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}:host{--color:var(--ion-color-step-600,#666);margin-left:0;margin-right:0;margin-top:0;margin-bottom:4px;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-size:12px;font-weight:700;letter-spacing:.4px;text-transform:uppercase}\"; }\n}\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nclass CardTitle {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    hostData() {\n        const mode = getIonMode(this);\n        return {\n            class: Object.assign({}, createColorClasses(this.color), { [mode]: true }),\n            'role': 'heading',\n            'aria-level': '2'\n        };\n    }\n    __stencil_render() {\n        return h(\"slot\", null);\n    }\n    render() { return h(Host, this.hostData(), this.__stencil_render()); }\n    static get style() { return \":host{display:block;position:relative;color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}:host{--color:var(--ion-text-color,#000);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-size:28px;font-weight:700;line-height:1.2}\"; }\n}\n\nexport { Card as ion_card, CardContent as ion_card_content, CardHeader as ion_card_header, CardSubtitle as ion_card_subtitle, CardTitle as ion_card_title };\n"]}