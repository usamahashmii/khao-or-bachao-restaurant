{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-menu_4-md.entry.js"],"names":["Menu","hostRef","lastOnEnd","blocker","createBlocker","disableScroll","mode","isAnimating","_isOpen","isPaneVisible","isEndSide","disabled","side","swipeGesture","maxEdgeStart","ionWillOpen","ionWillClose","ionDidOpen","ionDidClose","ionMenuChange","lazyMenuCtrl","type","oldType","contentEl","undefined","classList","remove","add","removeAttribute","menuInnerEl","animation","updateState","emit","open","get","componentOnReady","then","p","_getInstance","menuCtrl","el","parent","parentNode","content","contentId","document","getElementById","querySelector","tagName","console","error","typeChanged","sideChanged","_register","gesture","createGesture","gestureName","gesturePriority","threshold","canStart","ev","onWillStart","onStart","onMove","onEnd","destroy","_unregister","backdropEl","detail","isPane","timeStamp","shouldClose","composedPath","includes","preventDefault","stopPropagation","close","Promise","resolve","_isActive","animated","setOpen","shouldOpen","_setOpen","beforeAnimation","loadAnimation","startAnimation","afterAnimation","width","offsetWidth","_createAnimation","ani","reverse","playAsync","playSync","canSwipe","getOpenSync","checkEdgeSide","window","currentX","progressStart","delta","computeDelta","deltaX","stepValue","progressStep","isOpen","velocity","velocityX","z","shouldCompleteRight","shouldCompleteLeft","shouldComplete","missing","missingDistance","realDur","dur","Math","abs","min","onFinish","clearExistingCallbacks","oneTimeCallback","progressEnd","SHOW_MENU","SHOW_BACKDROP","block","unblock","MENU_CONTENT_OPEN","isActive","setDisabled","forceClosing","_setActiveMenu","role","ref","tappable","hostData","__stencil_render","max","win","posX","innerWidth","getMenuController","doc","menuControllerElement","toggleMenu","menu","menuEl","toggle","updateVisibility","MenuButton","visible","autoHide","setVisibility","onClick","color","menuIcon","hidden","attrs","Object","assign","icon","lazy","baseAnimation","AnimationC","easing","easingReverse","duration","BOX_SHADOW_WIDTH","menuOverlayAnimation","_","closedX","openedX","menuAnimation","addElement","fromTo","backdropAnimation","menuPushAnimation","contentOpenedX","menuClosedX","contentAnimation","menuRevealAnimation","contentOpen","MenuController","menus","menuAnimations","Map","registerAnimation","getOpen","enable","waitUntilReady","menuRef","find","m","menuId","length","getMenusSync","isAnimatingSync","name","set","indexOf","push","index","splice","filter","forEach","openedMenu","menuCmp","animationBuilder","Error","mod","create","getBoolean","map","some","predicate","instance","all","Array","from","querySelectorAll","MenuToggle"],"mappings":"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","file":"39-es5.js","sourcesContent":["import { r as registerInstance, d as getIonMode, c as createEvent, k as getConnect, h, e as getElement, H as Host } from './chunk-84f6bf13.js';\nimport { b as config } from './chunk-1074393c.js';\nimport { c as createColorClasses } from './chunk-ba834eff.js';\nimport { i as isEndSide, b as assert } from './chunk-c90aaa66.js';\nimport { GESTURE_CONTROLLER } from './index-8421816f.js';\n\nclass Menu {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastOnEnd = 0;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\n        this.mode = getIonMode(this);\n        this.isAnimating = false;\n        this._isOpen = false;\n        this.isPaneVisible = false;\n        this.isEndSide = false;\n        /**\n         * If `true`, the menu is disabled.\n         */\n        this.disabled = false;\n        /**\n         * Which side of the view the menu should be placed.\n         */\n        this.side = 'start';\n        /**\n         * If `true`, swiping the menu is enabled.\n         */\n        this.swipeGesture = true;\n        /**\n         * The edge threshold for dragging the menu open.\n         * If a drag/swipe happens over this value, the menu is not triggered.\n         */\n        this.maxEdgeStart = 50;\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\n        this.lazyMenuCtrl = getConnect(this, \"ion-menu-controller\");\n    }\n    typeChanged(type, oldType) {\n        const contentEl = this.contentEl;\n        if (contentEl) {\n            if (oldType !== undefined) {\n                contentEl.classList.remove(`menu-content-${oldType}`);\n            }\n            contentEl.classList.add(`menu-content-${type}`);\n            contentEl.removeAttribute('style');\n        }\n        if (this.menuInnerEl) {\n            // Remove effects of previous animations\n            this.menuInnerEl.removeAttribute('style');\n        }\n        this.animation = undefined;\n    }\n    disabledChanged() {\n        this.updateState();\n        this.ionMenuChange.emit({\n            disabled: this.disabled,\n            open: this._isOpen\n        });\n    }\n    sideChanged() {\n        this.isEndSide = isEndSide(this.side);\n    }\n    swipeGestureChanged() {\n        this.updateState();\n    }\n    async componentWillLoad() {\n        if (this.type === undefined) {\n            this.type = config.get('menuType', this.mode === 'ios' ? 'reveal' : 'overlay');\n        }\n        const menuCtrl = this.menuCtrl = await this.lazyMenuCtrl.componentOnReady().then(p => p._getInstance());\n        const el = this.el;\n        const parent = el.parentNode;\n        const content = this.contentId !== undefined\n            ? document.getElementById(this.contentId)\n            : parent && parent.querySelector && parent.querySelector('[main]');\n        if (!content || !content.tagName) {\n            // requires content element\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\n            return;\n        }\n        this.contentEl = content;\n        // add menu's content classes\n        content.classList.add('menu-content');\n        this.typeChanged(this.type, undefined);\n        this.sideChanged();\n        // register this menu with the app's menu controller\n        menuCtrl._register(this);\n        this.gesture = (await import('./index-8421816f.js')).createGesture({\n            el: document,\n            gestureName: 'menu-swipe',\n            gesturePriority: 30,\n            threshold: 10,\n            canStart: ev => this.canStart(ev),\n            onWillStart: () => this.onWillStart(),\n            onStart: () => this.onStart(),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.updateState();\n    }\n    componentDidLoad() {\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\n    }\n    componentDidUnload() {\n        this.blocker.destroy();\n        this.menuCtrl._unregister(this);\n        if (this.animation) {\n            this.animation.destroy();\n        }\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.animation = undefined;\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\n    }\n    onSplitPaneChanged(ev) {\n        this.isPaneVisible = ev.detail.isPane(this.el);\n        this.updateState();\n    }\n    onBackdropClick(ev) {\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\n            const shouldClose = (ev.composedPath)\n                ? !ev.composedPath().includes(this.menuInnerEl)\n                : false;\n            if (shouldClose) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                this.close();\n            }\n        }\n    }\n    /**\n     * Returns `true` is the menu is open.\n     */\n    isOpen() {\n        return Promise.resolve(this._isOpen);\n    }\n    /**\n     * Returns `true` is the menu is active.\n     *\n     * A menu is active when it can be opened or closed, meaning it's enabled\n     * and it's not part of a `ion-split-pane`.\n     */\n    isActive() {\n        return Promise.resolve(this._isActive());\n    }\n    /**\n     * Opens the menu. If the menu is already open or it can't be opened,\n     * it returns `false`.\n     */\n    open(animated = true) {\n        return this.setOpen(true, animated);\n    }\n    /**\n     * Closes the menu. If the menu is already closed or it can't be closed,\n     * it returns `false`.\n     */\n    close(animated = true) {\n        return this.setOpen(false, animated);\n    }\n    /**\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    toggle(animated = true) {\n        return this.setOpen(!this._isOpen, animated);\n    }\n    /**\n     * Opens or closes the button.\n     * If the operation can't be completed successfully, it returns `false`.\n     */\n    setOpen(shouldOpen, animated = true) {\n        return this.menuCtrl._setOpen(this, shouldOpen, animated);\n    }\n    async _setOpen(shouldOpen, animated = true) {\n        // If the menu is disabled or it is currently being animated, let's do nothing\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\n            return false;\n        }\n        this.beforeAnimation(shouldOpen);\n        await this.loadAnimation();\n        await this.startAnimation(shouldOpen, animated);\n        this.afterAnimation(shouldOpen);\n        return true;\n    }\n    async loadAnimation() {\n        // Menu swipe animation takes the menu's inner width as parameter,\n        // If `offsetWidth` changes, we need to create a new animation.\n        const width = this.menuInnerEl.offsetWidth;\n        if (width === this.width && this.animation !== undefined) {\n            return;\n        }\n        this.width = width;\n        // Destroy existing animation\n        if (this.animation) {\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Create new animation\n        this.animation = await this.menuCtrl._createAnimation(this.type, this);\n    }\n    async startAnimation(shouldOpen, animated) {\n        const ani = this.animation.reverse(!shouldOpen);\n        if (animated) {\n            await ani.playAsync();\n        }\n        else {\n            ani.playSync();\n        }\n    }\n    _isActive() {\n        return !this.disabled && !this.isPaneVisible;\n    }\n    canSwipe() {\n        return this.swipeGesture && !this.isAnimating && this._isActive();\n    }\n    canStart(detail) {\n        if (!this.canSwipe()) {\n            return false;\n        }\n        if (this._isOpen) {\n            return true;\n            // TODO error\n        }\n        else if (this.menuCtrl.getOpenSync()) {\n            return false;\n        }\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\n    }\n    onWillStart() {\n        this.beforeAnimation(!this._isOpen);\n        return this.loadAnimation();\n    }\n    onStart() {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        // the cloned animation should not use an easing curve during seek\n        this.animation.reverse(this._isOpen).progressStart();\n    }\n    onMove(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\n        const stepValue = delta / this.width;\n        this.animation.progressStep(stepValue);\n    }\n    onEnd(detail) {\n        if (!this.isAnimating || !this.animation) {\n            assert(false, 'isAnimating has to be true');\n            return;\n        }\n        const isOpen = this._isOpen;\n        const isEndSide = this.isEndSide;\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\n        const width = this.width;\n        const stepValue = delta / width;\n        const velocity = detail.velocityX;\n        const z = width / 2.0;\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\n        const shouldComplete = isOpen\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\n        let shouldOpen = !isOpen && shouldComplete;\n        if (isOpen && !shouldComplete) {\n            shouldOpen = true;\n        }\n        const missing = shouldComplete ? 1 - stepValue : stepValue;\n        const missingDistance = missing * width;\n        let realDur = 0;\n        if (missingDistance > 5) {\n            const dur = missingDistance / Math.abs(velocity);\n            realDur = Math.min(dur, 300);\n        }\n        this.lastOnEnd = detail.timeStamp;\n        this.animation\n            .onFinish(() => this.afterAnimation(shouldOpen), {\n            clearExistingCallbacks: true,\n            oneTimeCallback: true\n        })\n            .progressEnd(shouldComplete, stepValue, realDur);\n    }\n    beforeAnimation(shouldOpen) {\n        assert(!this.isAnimating, '_before() should not be called while animating');\n        // this places the menu into the correct location before it animates in\n        // this css class doesn't actually kick off any animations\n        this.el.classList.add(SHOW_MENU);\n        if (this.backdropEl) {\n            this.backdropEl.classList.add(SHOW_BACKDROP);\n        }\n        this.blocker.block();\n        this.isAnimating = true;\n        if (shouldOpen) {\n            this.ionWillOpen.emit();\n        }\n        else {\n            this.ionWillClose.emit();\n        }\n    }\n    afterAnimation(isOpen) {\n        assert(this.isAnimating, '_before() should be called while animating');\n        // keep opening/closing the menu disabled for a touch more yet\n        // only add listeners/css if it's enabled and isOpen\n        // and only remove listeners/css if it's not open\n        // emit opened/closed events\n        this._isOpen = isOpen;\n        this.isAnimating = false;\n        if (!this._isOpen) {\n            this.blocker.unblock();\n        }\n        if (isOpen) {\n            // add css class\n            if (this.contentEl) {\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\n            }\n            // emit open event\n            this.ionDidOpen.emit();\n        }\n        else {\n            // remove css classes\n            this.el.classList.remove(SHOW_MENU);\n            if (this.contentEl) {\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\n            }\n            if (this.backdropEl) {\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\n            }\n            // emit close event\n            this.ionDidClose.emit();\n        }\n    }\n    updateState() {\n        const isActive = this._isActive();\n        if (this.gesture) {\n            this.gesture.setDisabled(!isActive || !this.swipeGesture);\n        }\n        // Close menu immediately\n        if (!isActive && this._isOpen) {\n            // close if this menu is open, and should not be enabled\n            this.forceClosing();\n        }\n        if (!this.disabled && this.menuCtrl) {\n            this.menuCtrl._setActiveMenu(this);\n        }\n        assert(!this.isAnimating, 'can not be animating');\n    }\n    forceClosing() {\n        assert(this._isOpen, 'menu cannot be closed');\n        this.isAnimating = true;\n        const ani = this.animation.reverse(true);\n        ani.playSync();\n        this.afterAnimation(false);\n    }\n    hostData() {\n        const { isEndSide, type, disabled, isPaneVisible } = this;\n        return {\n            role: 'navigation',\n            class: {\n                [`${this.mode}`]: true,\n                [`menu-type-${type}`]: true,\n                'menu-enabled': !disabled,\n                'menu-side-end': isEndSide,\n                'menu-side-start': !isEndSide,\n                'menu-pane-visible': isPaneVisible\n            }\n        };\n    }\n    __stencil_render() {\n        return [\n            h(\"div\", { class: \"menu-inner\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)),\n            h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false })\n        ];\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"type\": [\"typeChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"side\": [\"sideChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"]\n    }; }\n    render() { return h(Host, this.hostData(), this.__stencil_render()); }\n    static get style() { return \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color,#fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,0,0);transform:translate3d(-9999px,0,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host-context([dir=rtl]) .menu-inner,[dir=rtl] .menu-inner{left:unset;right:unset;left:auto;right:0;-webkit-transform:translate3d(calc(-1 * -9999px),0,0);transform:translate3d(calc(-1 * -9999px),0,0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto}ion-backdrop{display:none;opacity:.01;z-index:-1}\\@media (max-width:340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translateZ(0);transform:translateZ(0)}:host(.menu-type-overlay){z-index:80}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none!important;transform:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}:host(.menu-pane-visible) ion-backdrop{display:hidden!important}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18);box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18)}\"; }\n}\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\n};\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\n    if (isEndSide) {\n        return posX >= win.innerWidth - maxEdgeStart;\n    }\n    else {\n        return posX <= maxEdgeStart;\n    }\n};\nconst SHOW_MENU = 'show-menu';\nconst SHOW_BACKDROP = 'show-backdrop';\nconst MENU_CONTENT_OPEN = 'menu-content-open';\n\n// Get the menu controller element\r\nconst getMenuController = (doc) => {\r\n    const menuControllerElement = doc.querySelector('ion-menu-controller');\r\n    if (!menuControllerElement) {\r\n        return Promise.resolve(undefined);\r\n    }\r\n    return menuControllerElement.componentOnReady();\r\n};\r\n// Given a menu, toggle it\r\nconst toggleMenu = async (menu) => {\r\n    const menuCtrl = await getMenuController(document);\r\n    if (menuCtrl) {\r\n        const menuEl = await menuCtrl.get(menu);\r\n        if (menuEl) {\r\n            menuCtrl.toggle(menu);\r\n        }\r\n    }\r\n};\r\n// Given a menu, return whether or not the menu toggle should be visible\r\nconst updateVisibility = async (menu) => {\r\n    const menuCtrl = await getMenuController(document);\r\n    if (menuCtrl) {\r\n        const menuEl = await menuCtrl.get(menu);\r\n        if (menuEl && await menuEl.isActive()) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\nclass MenuButton {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * If `true`, the user cannot interact with the menu button.\n         */\n        this.disabled = false;\n        /**\n         * Automatically hides the menu button when the corresponding menu is not active\n         */\n        this.autoHide = true;\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        this.setVisibility = async () => {\n            this.visible = await updateVisibility(this.menu);\n        };\n        this.onClick = async () => {\n            await toggleMenu(this.menu);\n        };\n    }\n    async componentDidLoad() {\n        await this.setVisibility();\n    }\n    async visibilityChanged() {\n        await this.setVisibility();\n    }\n    render() {\n        const { color, disabled } = this;\n        const mode = getIonMode(this);\n        const menuIcon = config.get('menuIcon', 'menu');\n        const hidden = this.autoHide && !this.visible;\n        const attrs = {\n            type: this.type\n        };\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: Object.assign({ [mode]: true }, createColorClasses(color), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'ion-activatable': true, 'ion-focusable': true }) }, h(\"button\", Object.assign({}, attrs, { disabled: this.disabled, class: \"button-native\" }), h(\"slot\", null, h(\"ion-icon\", { icon: menuIcon, mode: mode, lazy: false })), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\n    }\n    static get style() { return \":host{--background:transparent;--color-focused:var(--color);--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:.5;pointer-events:none}\\@media (any-hover:hover){:host(:hover) .button-native{background:var(--background-hover);color:var(--color-hover)}}:host(.ion-focused) .button-native{background:var(--background-focused);color:var(--color-focused)}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host-context(ion-toolbar:not(.ion-color)){color:var(--ion-toolbar-color,var(--color))}:host{--background-focused:rgba(66,66,66,0.24);--background-hover:rgba(66,66,66,0.08);--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}\\@media (any-hover:hover){:host(.ion-color:hover) .button-native{background:rgba(var(--ion-color-base-rgb),.08)}}:host(.ion-color.ion-focused) .button-native{background:rgba(var(--ion-color-base-rgb),.24);color:var(--ion-color-base)}\"; }\n}\n\n/**\r\n * baseAnimation\r\n * Base class which is extended by the various types. Each\r\n * type will provide their own animations for open and close\r\n * and registers itself with Menu.\r\n */\r\nconst baseAnimation = (AnimationC) => {\r\n    // https://material.io/guidelines/motion/movement.html#movement-movement-in-out-of-screen-bounds\r\n    // https://material.io/guidelines/motion/duration-easing.html#duration-easing-natural-easing-curves\r\n    // \"Apply the sharp curve to items temporarily leaving the screen that may return\r\n    // from the same exit point. When they return, use the deceleration curve. On mobile,\r\n    // this transition typically occurs over 300ms\" -- MD Motion Guide\r\n    return Promise.resolve(new AnimationC()\r\n        .easing('cubic-bezier(0.0, 0.0, 0.2, 1)') // Deceleration curve (Entering the screen)\r\n        .easingReverse('cubic-bezier(0.4, 0.0, 0.6, 1)') // Sharp curve (Temporarily leaving the screen)\r\n        .duration(300));\r\n};\n\nconst BOX_SHADOW_WIDTH = 8;\r\n/**\r\n * Menu Overlay Type\r\n * The menu slides over the content. The content\r\n * itself, which is under the menu, does not move.\r\n */\r\nconst menuOverlayAnimation = (AnimationC, _, menu) => {\r\n    let closedX;\r\n    let openedX;\r\n    const width = menu.width + BOX_SHADOW_WIDTH;\r\n    if (menu.isEndSide) {\r\n        // right side\r\n        closedX = width + 'px';\r\n        openedX = '0px';\r\n    }\r\n    else {\r\n        // left side\r\n        closedX = -width + 'px';\r\n        openedX = '0px';\r\n    }\r\n    const menuAnimation = new AnimationC()\r\n        .addElement(menu.menuInnerEl)\r\n        .fromTo('translateX', closedX, openedX);\r\n    const backdropAnimation = new AnimationC()\r\n        .addElement(menu.backdropEl)\r\n        .fromTo('opacity', 0.01, 0.32);\r\n    return baseAnimation(AnimationC).then(animation => {\r\n        return animation.add(menuAnimation)\r\n            .add(backdropAnimation);\r\n    });\r\n};\n\n/**\r\n * Menu Push Type\r\n * The content slides over to reveal the menu underneath.\r\n * The menu itself also slides over to reveal its bad self.\r\n */\r\nconst menuPushAnimation = (AnimationC, _, menu) => {\r\n    let contentOpenedX;\r\n    let menuClosedX;\r\n    const width = menu.width;\r\n    if (menu.isEndSide) {\r\n        contentOpenedX = -width + 'px';\r\n        menuClosedX = width + 'px';\r\n    }\r\n    else {\r\n        contentOpenedX = width + 'px';\r\n        menuClosedX = -width + 'px';\r\n    }\r\n    const menuAnimation = new AnimationC()\r\n        .addElement(menu.menuInnerEl)\r\n        .fromTo('translateX', menuClosedX, '0px');\r\n    const contentAnimation = new AnimationC()\r\n        .addElement(menu.contentEl)\r\n        .fromTo('translateX', '0px', contentOpenedX);\r\n    const backdropAnimation = new AnimationC()\r\n        .addElement(menu.backdropEl)\r\n        .fromTo('opacity', 0.01, 0.32);\r\n    return baseAnimation(AnimationC).then(animation => {\r\n        return animation.add(menuAnimation)\r\n            .add(backdropAnimation)\r\n            .add(contentAnimation);\r\n    });\r\n};\n\n/**\r\n * Menu Reveal Type\r\n * The content slides over to reveal the menu underneath.\r\n * The menu itself, which is under the content, does not move.\r\n */\r\nconst menuRevealAnimation = (AnimationC, _, menu) => {\r\n    const openedX = (menu.width * (menu.isEndSide ? -1 : 1)) + 'px';\r\n    const contentOpen = new AnimationC()\r\n        .addElement(menu.contentEl)\r\n        .fromTo('translateX', '0px', openedX);\r\n    return baseAnimation(AnimationC).then(animation => {\r\n        return animation.add(contentOpen);\r\n    });\r\n};\n\nclass MenuController {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.menus = [];\n        this.menuAnimations = new Map();\n        this.registerAnimation('reveal', menuRevealAnimation);\n        this.registerAnimation('push', menuPushAnimation);\n        this.registerAnimation('overlay', menuOverlayAnimation);\n    }\n    /**\n     * Open the menu. If a menu is not provided then it will open the first\n     * menu found. If the specified menu is `start` or `end`, then it will open\n     * the enabled menu on that side. Otherwise, it will try to find the menu\n     * using the menu's `id` property. If a menu is not found then it will\n     * return `false`.\n     *\n     * @param menu The menuId or side of the menu to open.\n     */\n    async open(menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            return menuEl.open();\n        }\n        return false;\n    }\n    /**\n     * Close the menu. If a menu is specified, it will close that menu.\n     * If no menu is specified, then it will close any menu that is open.\n     * If it does not find any open menus, it will return `false`.\n     *\n     * @param menu The menuId or side of the menu to close.\n     */\n    async close(menu) {\n        const menuEl = await (menu !== undefined ? this.get(menu) : this.getOpen());\n        if (menuEl !== undefined) {\n            return menuEl.close();\n        }\n        return false;\n    }\n    /**\n     * Toggle the menu open or closed. If the menu is already open, it will try to\n     * close the menu, otherwise it will try to open it. Returns `false` if\n     * a menu is not found.\n     *\n     * @param menu The menuId or side of the menu to toggle.\n     */\n    async toggle(menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            return menuEl.toggle();\n        }\n        return false;\n    }\n    /**\n     * Enable or disable a menu. Disabling a menu will not allow gestures\n     * for that menu or any calls to open it. This is useful when there are\n     * multiple menus on the same side and only one of them should be allowed\n     * to open. Enabling a menu will automatically disable all other menus\n     * on that side.\n     *\n     * @param enable If `true`, the menu should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable.\n     */\n    async enable(enable, menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            menuEl.disabled = !enable;\n        }\n        return menuEl;\n    }\n    /**\n     * Enable or disable the ability to swipe open the menu.\n     *\n     * @param enable If `true`, the menu swipe gesture should be enabled.\n     * @param menu The menuId or side of the menu to enable or disable the swipe gesture on.\n     */\n    async swipeGesture(enable, menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            menuEl.swipeGesture = enable;\n        }\n        return menuEl;\n    }\n    /**\n     * Get whether or not the menu is open. Returns `true` if the specified\n     * menu is open. If a menu is not specified, it will return `true` if\n     * any menu is currently open.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    async isOpen(menu) {\n        if (menu != null) {\n            const menuEl = await this.get(menu);\n            return (menuEl !== undefined && menuEl.isOpen());\n        }\n        else {\n            const menuEl = await this.getOpen();\n            return menuEl !== undefined;\n        }\n    }\n    /**\n     * Get whether or not the menu is enabled. Returns `true` if the\n     * specified menu is enabled. Returns `false` if a menu is disabled\n     * or not found.\n     *\n     * @param menu The menuId or side of the menu that is being checked.\n     */\n    async isEnabled(menu) {\n        const menuEl = await this.get(menu);\n        if (menuEl) {\n            return !menuEl.disabled;\n        }\n        return false;\n    }\n    /**\n     * Get a menu instance. If a menu is not provided then it will return the first\n     * menu found. If the specified menu is `start` or `end`, then it will return the\n     * enabled menu on that side. Otherwise, it will try to find the menu using the menu's\n     * `id` property. If a menu is not found then it will return `null`.\n     *\n     * @param menu The menuId or side of the menu.\n     */\n    async get(menu) {\n        await this.waitUntilReady();\n        if (menu === 'start' || menu === 'end') {\n            // there could be more than one menu on the same side\n            // so first try to get the enabled one\n            const menuRef = this.find(m => m.side === menu && !m.disabled);\n            if (menuRef) {\n                return menuRef;\n            }\n            // didn't find a menu side that is enabled\n            // so try to get the first menu side found\n            return this.find(m => m.side === menu);\n        }\n        else if (menu != null) {\n            // the menuId was not left or right\n            // so try to get the menu by its \"id\"\n            return this.find(m => m.menuId === menu);\n        }\n        // return the first enabled menu\n        const menuEl = this.find(m => !m.disabled);\n        if (menuEl) {\n            return menuEl;\n        }\n        // get the first menu in the array, if one exists\n        return this.menus.length > 0 ? this.menus[0].el : undefined;\n    }\n    /**\n     * Get the instance of the opened menu. Returns `null` if a menu is not found.\n     */\n    async getOpen() {\n        await this.waitUntilReady();\n        return this.getOpenSync();\n    }\n    /**\n     * Get all menu instances.\n     */\n    async getMenus() {\n        await this.waitUntilReady();\n        return this.getMenusSync();\n    }\n    /**\n     * Get whether or not a menu is animating. Returns `true` if any\n     * menu is currently animating.\n     */\n    async isAnimating() {\n        await this.waitUntilReady();\n        return this.isAnimatingSync();\n    }\n    /**\n     * Registers a new animation that can be used with any `ion-menu` by\n     * passing the name of the animation in its `type` property.\n     *\n     * @param name The name of the animation to register.\n     * @param animation The animation function to register.\n     */\n    async registerAnimation(name, animation) {\n        this.menuAnimations.set(name, animation);\n    }\n    /**\n     * @internal\n     */\n    _getInstance() {\n        return Promise.resolve(this);\n    }\n    _register(menu) {\n        const menus = this.menus;\n        if (menus.indexOf(menu) < 0) {\n            if (!menu.disabled) {\n                this._setActiveMenu(menu);\n            }\n            menus.push(menu);\n        }\n    }\n    _unregister(menu) {\n        const index = this.menus.indexOf(menu);\n        if (index > -1) {\n            this.menus.splice(index, 1);\n        }\n    }\n    _setActiveMenu(menu) {\n        // if this menu should be enabled\n        // then find all the other menus on this same side\n        // and automatically disable other same side menus\n        const side = menu.side;\n        this.menus\n            .filter(m => m.side === side && m !== menu)\n            .forEach(m => m.disabled = true);\n    }\n    async _setOpen(menu, shouldOpen, animated) {\n        if (this.isAnimatingSync()) {\n            return false;\n        }\n        if (shouldOpen) {\n            const openedMenu = await this.getOpen();\n            if (openedMenu && menu.el !== openedMenu) {\n                await openedMenu.setOpen(false, false);\n            }\n        }\n        return menu._setOpen(shouldOpen, animated);\n    }\n    async _createAnimation(type, menuCmp) {\n        const animationBuilder = this.menuAnimations.get(type);\n        if (!animationBuilder) {\n            throw new Error('animation not registered');\n        }\n        const animation = await import('./index-d9adb105.js')\n            .then(mod => mod.create(animationBuilder, null, menuCmp));\n        if (!config.getBoolean('animated', true)) {\n            animation.duration(0);\n        }\n        return animation;\n    }\n    getOpenSync() {\n        return this.find(m => m._isOpen);\n    }\n    getMenusSync() {\n        return this.menus.map(menu => menu.el);\n    }\n    isAnimatingSync() {\n        return this.menus.some(menu => menu.isAnimating);\n    }\n    find(predicate) {\n        const instance = this.menus.find(predicate);\n        if (instance !== undefined) {\n            return instance.el;\n        }\n        return undefined;\n    }\n    waitUntilReady() {\n        return Promise.all(Array.from(document.querySelectorAll('ion-menu'))\n            .map(menu => menu.componentOnReady()));\n    }\n    static get style() { return \".menu-content{-webkit-transform:translateZ(0);transform:translateZ(0)}.menu-content-open{cursor:pointer;-ms-touch-action:manipulation;touch-action:manipulation;pointer-events:none}.ios .menu-content-reveal{-webkit-box-shadow:-8px 0 42px rgba(0,0,0,.08);box-shadow:-8px 0 42px rgba(0,0,0,.08)}[dir=rtl].ios .menu-content-reveal{-webkit-box-shadow:8px 0 42px rgba(0,0,0,.08);box-shadow:8px 0 42px rgba(0,0,0,.08)}.md .menu-content-push,.md .menu-content-reveal{-webkit-box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18);box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18)}\"; }\n}\n\nclass MenuToggle {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.visible = false;\n        /**\n         * Automatically hides the content when the corresponding menu is not active.\n         *\n         * By default, it's `true`. Change it to `false` in order to\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\n         */\n        this.autoHide = true;\n        this.setVisibility = async () => {\n            this.visible = await updateVisibility(this.menu);\n        };\n        this.onClick = async () => {\n            await toggleMenu(this.menu);\n        };\n    }\n    async componentDidLoad() {\n        await this.setVisibility();\n    }\n    async visibilityChanged() {\n        await this.setVisibility();\n    }\n    render() {\n        const mode = getIonMode(this);\n        const hidden = this.autoHide && !this.visible;\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\n                [mode]: true,\n                'menu-toggle-hidden': hidden,\n            } }, h(\"slot\", null)));\n    }\n    static get style() { return \":host(.menu-toggle-hidden){display:none}\"; }\n}\n\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuController as ion_menu_controller, MenuToggle as ion_menu_toggle };\n"]}