{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-textarea-ios.entry.js"],"names":["Textarea","hostRef","inputId","textareaIds","didBlurAfterEdit","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","ionInput","emit","onFocus","focusChange","ionFocus","onBlur","ionBlur","onKeyDown","checkClearOnEdit","ionChange","ionStyle","ionInputDidLoad","ionInputDidUnload","getValue","runAutoGrow","debounceChanged","style","height","scrollHeight","focus","Promise","resolve","placeholder","hasValue","mode","labelId","label","el","id","Object","assign","color","ref","autoCapitalize","autoFocus","maxLength","maxlength","minLength","minlength","readOnly","spellCheck","cols","rows","wrap"],"mappings":"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","file":"72-es5.js","sourcesContent":["import { r as registerInstance, c as createEvent, f as readTask, d as getIonMode, h, H as Host, e as getElement } from './chunk-84f6bf13.js';\nimport './chunk-1074393c.js';\nimport { c as createColorClasses } from './chunk-ba834eff.js';\nimport { d as debounceEvent, f as findItemLabel } from './chunk-c90aaa66.js';\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nclass Textarea {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-input-${textareaIds++}`;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'none';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\n         */\n        this.clearOnEdit = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the textarea.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * If `true`, the element height will increase based on the value.\n         */\n        this.autoGrow = false;\n        /**\n         * The value of the textarea.\n         */\n        this.value = '';\n        this.onInput = (ev) => {\n            if (this.nativeInput) {\n                this.value = this.nativeInput.value;\n            }\n            this.emitStyle();\n            this.ionInput.emit(ev);\n        };\n        this.onFocus = () => {\n            this.hasFocus = true;\n            this.focusChange();\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.hasFocus = false;\n            this.focusChange();\n            this.ionBlur.emit();\n        };\n        this.onKeyDown = () => {\n            this.checkClearOnEdit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionInputDidLoad = createEvent(this, \"ionInputDidLoad\", 7);\n        this.ionInputDidUnload = createEvent(this, \"ionInputDidUnload\", 7);\n    }\n    debounceChanged() {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    valueChanged() {\n        const nativeInput = this.nativeInput;\n        const value = this.getValue();\n        if (nativeInput && nativeInput.value !== value) {\n            nativeInput.value = value;\n        }\n        this.runAutoGrow();\n        this.emitStyle();\n        this.ionChange.emit({ value });\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    componentDidLoad() {\n        this.debounceChanged();\n        this.runAutoGrow();\n        this.ionInputDidLoad.emit();\n    }\n    // TODO: performance hit, this cause layout thrashing\n    runAutoGrow() {\n        const nativeInput = this.nativeInput;\n        if (nativeInput && this.autoGrow) {\n            readTask(() => {\n                nativeInput.style.height = 'inherit';\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\n            });\n        }\n    }\n    componentDidUnload() {\n        this.ionInputDidUnload.emit();\n    }\n    /**\n     * Sets focus on the specified `ion-textarea`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n    /**\n     * Returns the native `<textarea>` element used under the hood.\n     */\n    getInputElement() {\n        return Promise.resolve(this.nativeInput);\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'textarea': true,\n            'input': true,\n            'interactive-disabled': this.disabled,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus\n        });\n    }\n    /**\n     * Check if we need to clear the text input if clearOnEdit is enabled\n     */\n    checkClearOnEdit() {\n        if (!this.clearOnEdit) {\n            return;\n        }\n        // Did the input value change after it was blurred and edited?\n        if (this.didBlurAfterEdit && this.hasValue()) {\n            // Clear the input\n            this.value = '';\n        }\n        // Reset the flag\n        this.didBlurAfterEdit = false;\n    }\n    focusChange() {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n        this.emitStyle();\n    }\n    hasValue() {\n        return this.getValue() !== '';\n    }\n    getValue() {\n        return this.value || '';\n    }\n    render() {\n        const mode = getIonMode(this);\n        const value = this.getValue();\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign({}, createColorClasses(this.color), { [mode]: true }) }, h(\"textarea\", { class: \"native-textarea\", ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n    static get style() { return \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);white-space:pre-wrap;z-index:2}.ion-color.sc-ion-textarea-ios-h{background:initial;color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h, ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label), ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios, [dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios, [dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-floating.sc-ion-textarea-ios-h, .item-label-floating .sc-ion-textarea-ios-h, .item-label-stacked.sc-ion-textarea-ios-h, .item-label-stacked .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\"; }\n}\nlet textareaIds = 0;\n\nexport { Textarea as ion_textarea };\n"]}