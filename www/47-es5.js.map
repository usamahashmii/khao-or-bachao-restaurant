{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-radio_2-ios.entry.js"],"names":["Radio","hostRef","inputId","radioButtonIds","name","disabled","checked","onFocus","ionFocus","emit","onBlur","ionBlur","onClick","ionDeselect","ionRadioDidLoad","ionRadioDidUnload","ionStyle","ionSelect","emitStyle","isChecked","value","undefined","color","el","mode","labelId","label","id","role","Object","assign","type","RadioGroup","radioGroupIds","radios","allowEmptySelection","ionChange","updateRadios","ev","radio","target","push","index","indexOf","splice","selectedRadio","header","querySelector","hasChecked","hostData"],"mappings":"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","file":"47-es5.js","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, H as Host, e as getElement } from './chunk-84f6bf13.js';\nimport './chunk-1074393c.js';\nimport { c as createColorClasses, h as hostContext } from './chunk-ba834eff.js';\nimport { f as findItemLabel } from './chunk-c90aaa66.js';\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nclass Radio {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-rb-${radioButtonIds++}`;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot interact with the radio.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the radio is selected.\n         */\n        this.checked = false;\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.onClick = () => {\n            if (this.checked) {\n                this.ionDeselect.emit();\n            }\n            else {\n                this.checked = true;\n            }\n        };\n        this.ionRadioDidLoad = createEvent(this, \"ionRadioDidLoad\", 7);\n        this.ionRadioDidUnload = createEvent(this, \"ionRadioDidUnload\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n        this.ionDeselect = createEvent(this, \"ionDeselect\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    }\n    colorChanged() {\n        this.emitStyle();\n    }\n    checkedChanged(isChecked) {\n        if (isChecked) {\n            this.ionSelect.emit({\n                checked: true,\n                value: this.value\n            });\n        }\n        this.emitStyle();\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    componentWillLoad() {\n        if (this.value === undefined) {\n            this.value = this.inputId;\n        }\n        this.emitStyle();\n    }\n    componentDidLoad() {\n        this.ionRadioDidLoad.emit();\n    }\n    componentDidUnload() {\n        this.ionRadioDidUnload.emit();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'radio-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    render() {\n        const { inputId, disabled, checked, color, el } = this;\n        const mode = getIonMode(this);\n        const labelId = inputId + '-lbl';\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { onClick: this.onClick, role: \"radio\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign({}, createColorClasses(color), { [mode]: true, 'in-item': hostContext('ion-item', el), 'interactive': true, 'radio-checked': checked, 'radio-disabled': disabled }) }, h(\"div\", { class: \"radio-icon\" }, h(\"div\", { class: \"radio-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"color\": [\"colorChanged\"],\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n    static get style() { return \":host{display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;contain:layout size style}.radio-icon,button{width:100%;height:100%}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color-checked:var(--ion-color-primary,#3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:.3}:host(.ion-focused) .radio-icon:after{border-radius:50%;left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint,#4c8dff);content:\\\"\\\";opacity:.2}:host-context([dir=rtl]).ion-focused .radio-icon:after,:host-context([dir=rtl]):host(.ion-focused) .radio-icon:after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:8px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\"; }\n}\nlet radioButtonIds = 0;\n\nclass RadioGroup {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-rg-${radioGroupIds++}`;\n        this.labelId = `${this.inputId}-lbl`;\n        this.radios = [];\n        /**\n         * If `true`, the radios can be deselected.\n         */\n        this.allowEmptySelection = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n    }\n    valueChanged(value) {\n        this.updateRadios();\n        this.ionChange.emit({ value });\n    }\n    onRadioDidLoad(ev) {\n        const radio = ev.target;\n        radio.name = this.name;\n        // add radio to internal list\n        this.radios.push(radio);\n        // this radio-group does not have a value\n        // but this radio is checked, so let's set the\n        // radio-group's value from the checked radio\n        if (this.value == null && radio.checked) {\n            this.value = radio.value;\n        }\n        else {\n            this.updateRadios();\n        }\n    }\n    onRadioDidUnload(ev) {\n        const index = this.radios.indexOf(ev.target);\n        if (index > -1) {\n            this.radios.splice(index, 1);\n        }\n    }\n    onRadioSelect(ev) {\n        const selectedRadio = ev.target;\n        if (selectedRadio) {\n            this.value = selectedRadio.value;\n        }\n    }\n    onRadioDeselect(ev) {\n        if (this.allowEmptySelection) {\n            const selectedRadio = ev.target;\n            if (selectedRadio) {\n                selectedRadio.checked = false;\n                this.value = undefined;\n            }\n        }\n    }\n    componentDidLoad() {\n        // Get the list header if it exists and set the id\n        // this is used to set aria-labelledby\n        let header = this.el.querySelector('ion-list-header');\n        if (!header) {\n            header = this.el.querySelector('ion-item-divider');\n        }\n        if (header) {\n            const label = header.querySelector('ion-label');\n            if (label) {\n                this.labelId = label.id = this.name + '-lbl';\n            }\n        }\n        this.updateRadios();\n    }\n    updateRadios() {\n        const value = this.value;\n        let hasChecked = false;\n        for (const radio of this.radios) {\n            if (!hasChecked && radio.value === value) {\n                // correct value for this radio\n                // but this radio isn't checked yet\n                // and we haven't found a checked yet\n                hasChecked = true;\n                radio.checked = true;\n            }\n            else {\n                // this radio doesn't have the correct value\n                // or the radio group has been already checked\n                radio.checked = false;\n            }\n        }\n    }\n    hostData() {\n        const mode = getIonMode(this);\n        return {\n            'role': 'radiogroup',\n            'aria-labelledby': this.labelId,\n            class: {\n                [mode]: true,\n            }\n        };\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"]\n    }; }\n    render() { return h(Host, this.hostData()); }\n}\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"]}