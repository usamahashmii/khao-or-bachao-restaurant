{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/shadow-css-bbdf056f-05cd1ccb.js"],"names":["ShadowCss","strictStyling","cssText","scopeId","hostScopeId","slotScopeId","commentOriginalSelector","commentsWithHash","extractCommentsWithHash","stripComments","orgSelectors","processCommentedSelector","rule","placeholder","length","comment","selector","push","processRules","startsWith","content","scopedCssText","_scopeCssText","join","forEach","replace","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertColonSlotted","_convertShadowDOMSelectors","_scopeSelectors","trim","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","slotAttr","regExp","_cssColonSlottedRe","m","compound","suffix","sel","_polyfillHostNoCombinator","_cssColonHostContextRe","_colonHostContextPartReplacer","partReplacer","parts","split","r","i","p","host","part","indexOf","_polyfillHost","_shadowDOMSelectorsRe","reduce","result","pattern","scopeSelector","hostSelector","slotSelector","_scopeSelector","CssRule","strict","map","shallowPart","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","re","_makeScopeMatcher","test","lre","rre","RegExp","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","lastIndex","replaceBy","_polyfillHostNoCombinatorRe","_","before","colon","after","isRe","className","_scopeSelectorPart","scopedP","t","matches","match","safeContent","SafeSelector","scopedSelector","startIndex","res","sep","hasHost","shouldScope","exec","separator","slice","index","scopedPart","substring","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","_colonSlottedRe","_polyfillSlotted","placeholders","keep","_content","pseudo","exp","StringWithEscapedBlocks","escapedString","blocks","_parenSuffix","_commentRe","input","_commentWithHashRe","_ruleRe","_curlyRe","OPEN_CURLY","CLOSE_CURLY","BLOCK_PLACEHOLDER","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","contentPrefix","inputParts","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","scopeCss","sc","shimCssText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;UAWMA,S;AACF,6BAAc;AAAA;;AACV,eAAKC,aAAL,GAAqB,IAArB;AACH;;;;sCACWC,O,EAASC,O,EAA8E;AAAA,gBAArEC,WAAqE,uEAAvD,EAAuD;AAAA,gBAAnDC,WAAmD,uEAArC,EAAqC;AAAA,gBAAjCC,uBAAiC,uEAAP,KAAO;AAC/F,gBAAMC,gBAAgB,GAAGC,uBAAuB,CAACN,OAAD,CAAhD;AACAA,mBAAO,GAAGO,aAAa,CAACP,OAAD,CAAvB;AACA,gBAAMQ,YAAY,GAAG,EAArB;;AACA,gBAAIJ,uBAAJ,EAA6B;AACzB,kBAAMK,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,IAAD,EAAU;AACvC,oBAAMC,WAAW,oBAAaH,YAAY,CAACI,MAA1B,UAAjB;AACA,oBAAMC,OAAO,iBAAUH,IAAI,CAACI,QAAf,OAAb;AACAN,4BAAY,CAACO,IAAb,CAAkB;AAAEJ,6BAAW,EAAXA,WAAF;AAAeE,yBAAO,EAAPA;AAAf,iBAAlB;AACAH,oBAAI,CAACI,QAAL,GAAgBH,WAAW,GAAGD,IAAI,CAACI,QAAnC;AACA,uBAAOJ,IAAP;AACH,eAND;;AAOAV,qBAAO,GAAGgB,YAAY,CAAChB,OAAD,EAAU,UAAAU,IAAI,EAAI;AACpC,oBAAIA,IAAI,CAACI,QAAL,CAAc,CAAd,MAAqB,GAAzB,EAA8B;AAC1B,yBAAOL,wBAAwB,CAACC,IAAD,CAA/B;AACH,iBAFD,MAGK,IAAIA,IAAI,CAACI,QAAL,CAAcG,UAAd,CAAyB,QAAzB,KAAsCP,IAAI,CAACI,QAAL,CAAcG,UAAd,CAAyB,WAAzB,CAAtC,IACLP,IAAI,CAACI,QAAL,CAAcG,UAAd,CAAyB,OAAzB,CADK,IACgCP,IAAI,CAACI,QAAL,CAAcG,UAAd,CAAyB,WAAzB,CADpC,EAC2E;AAC5EP,sBAAI,CAACQ,OAAL,GAAeF,YAAY,CAACN,IAAI,CAACQ,OAAN,EAAeT,wBAAf,CAA3B;AACA,yBAAOC,IAAP;AACH;;AACD,uBAAOA,IAAP;AACH,eAVqB,CAAtB;AAWH;;AACD,gBAAMS,aAAa,GAAG,KAAKC,aAAL,CAAmBpB,OAAnB,EAA4BC,OAA5B,EAAqCC,WAArC,EAAkDC,WAAlD,EAA+DC,uBAA/D,CAAtB;;AACAJ,mBAAO,GAAG,CAACmB,aAAD,4BAAmBd,gBAAnB,GAAqCgB,IAArC,CAA0C,IAA1C,CAAV;;AACA,gBAAIjB,uBAAJ,EAA6B;AACzBI,0BAAY,CAACc,OAAb,CAAqB,gBAA8B;AAAA,oBAA3BX,WAA2B,QAA3BA,WAA2B;AAAA,oBAAdE,OAAc,QAAdA,OAAc;AAC/Cb,uBAAO,GAAGA,OAAO,CAACuB,OAAR,CAAgBZ,WAAhB,EAA6BE,OAA7B,CAAV;AACH,eAFD;AAGH;;AACD,mBAAOb,OAAP;AACH;;;wCACaA,O,EAASC,O,EAASC,W,EAAaC,W,EAAaC,uB,EAAyB;AAC/E;AACAJ,mBAAO,GAAG,KAAKwB,4BAAL,CAAkCxB,OAAlC,CAAV;AACAA,mBAAO,GAAG,KAAKyB,iBAAL,CAAuBzB,OAAvB,CAAV;AACAA,mBAAO,GAAG,KAAK0B,wBAAL,CAA8B1B,OAA9B,CAAV;AACAA,mBAAO,GAAG,KAAK2B,oBAAL,CAA0B3B,OAA1B,EAAmCG,WAAnC,CAAV;AACAH,mBAAO,GAAG,KAAK4B,0BAAL,CAAgC5B,OAAhC,CAAV;;AACA,gBAAIC,OAAJ,EAAa;AACTD,qBAAO,GAAG,KAAK6B,eAAL,CAAqB7B,OAArB,EAA8BC,OAA9B,EAAuCC,WAAvC,EAAoDC,WAApD,EAAiEC,uBAAjE,CAAV;AACH;;AACDJ,mBAAO,GAAGA,OAAO,CAACuB,OAAR,CAAgB,+BAAhB,aAAqDrB,WAArD,EAAV;AACAF,mBAAO,GAAGA,OAAO,CAACuB,OAAR,CAAgB,sBAAhB,EAAwC,MAAxC,CAAV;AACA,mBAAOvB,OAAO,CAAC8B,IAAR,EAAP;AACH;AACD;;;;;;;;;;4CAOkB9B,O,EAAS;AACvB,mBAAO,KAAK+B,iBAAL,CAAuB/B,OAAvB,EAAgCgC,eAAhC,EAAiD,KAAKC,sBAAtD,CAAP;AACH;AACD;;;;;;+CAGqBjC,O,EAASkC,Q,EAAU;AACpC,gBAAMC,MAAM,GAAGC,kBAAf;AACA,mBAAOpC,OAAO,CAACuB,OAAR,CAAgBY,MAAhB,EAAwB,YAAU;AAAA,gDAANE,CAAM;AAANA,iBAAM;AAAA;;AACrC,kBAAIA,CAAC,CAAC,CAAD,CAAL,EAAU;AACN,oBAAMC,QAAQ,GAAGD,CAAC,CAAC,CAAD,CAAD,CAAKP,IAAL,EAAjB;AACA,oBAAMS,MAAM,GAAGF,CAAC,CAAC,CAAD,CAAhB;AACA,oBAAMG,GAAG,GAAG,MAAMN,QAAN,GAAiB,KAAjB,GAAyBI,QAAzB,GAAoCC,MAAhD;AACA,uBAAOC,GAAP;AACH,eALD,MAMK;AACD,uBAAOC,yBAAyB,GAAGJ,CAAC,CAAC,CAAD,CAApC;AACH;AACJ,aAVM,CAAP;AAWH;AACD;;;;;;;;;;;;;;;;;;mDAeyBrC,O,EAAS;AAC9B,mBAAO,KAAK+B,iBAAL,CAAuB/B,OAAvB,EAAgC0C,sBAAhC,EAAwD,KAAKC,6BAA7D,CAAP;AACH;;;4CACiB3C,O,EAASmC,M,EAAQS,Y,EAAc;AAC7C;AACA,mBAAO5C,OAAO,CAACuB,OAAR,CAAgBY,MAAhB,EAAwB,YAAU;AAAA,iDAANE,CAAM;AAANA,iBAAM;AAAA;;AACrC,kBAAIA,CAAC,CAAC,CAAD,CAAL,EAAU;AACN,oBAAMQ,KAAK,GAAGR,CAAC,CAAC,CAAD,CAAD,CAAKS,KAAL,CAAW,GAAX,CAAd;AACA,oBAAMC,CAAC,GAAG,EAAV;;AACA,qBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACjC,MAA1B,EAAkCoC,CAAC,EAAnC,EAAuC;AACnC,sBAAMC,CAAC,GAAGJ,KAAK,CAACG,CAAD,CAAL,CAASlB,IAAT,EAAV;AACA,sBAAI,CAACmB,CAAL,EACI;AACJF,mBAAC,CAAChC,IAAF,CAAO6B,YAAY,CAACH,yBAAD,EAA4BQ,CAA5B,EAA+BZ,CAAC,CAAC,CAAD,CAAhC,CAAnB;AACH;;AACD,uBAAOU,CAAC,CAAC1B,IAAF,CAAO,GAAP,CAAP;AACH,eAVD,MAWK;AACD,uBAAOoB,yBAAyB,GAAGJ,CAAC,CAAC,CAAD,CAApC;AACH;AACJ,aAfM,CAAP;AAgBH;;;wDAC6Ba,I,EAAMC,I,EAAMZ,M,EAAQ;AAC9C,gBAAIY,IAAI,CAACC,OAAL,CAAaC,aAAb,IAA8B,CAAC,CAAnC,EAAsC;AAClC,qBAAO,KAAKpB,sBAAL,CAA4BiB,IAA5B,EAAkCC,IAAlC,EAAwCZ,MAAxC,CAAP;AACH,aAFD,MAGK;AACD,qBAAOW,IAAI,GAAGC,IAAP,GAAcZ,MAAd,GAAuB,IAAvB,GAA8BY,IAA9B,GAAqC,GAArC,GAA2CD,IAA3C,GAAkDX,MAAzD;AACH;AACJ;;;iDACsBW,I,EAAMC,I,EAAMZ,M,EAAQ;AACvC,mBAAOW,IAAI,GAAGC,IAAI,CAAC5B,OAAL,CAAa8B,aAAb,EAA4B,EAA5B,CAAP,GAAyCd,MAAhD;AACH;AACD;;;;;;;qDAI2BvC,O,EAAS;AAChC,mBAAOsD,qBAAqB,CAACC,MAAtB,CAA6B,UAACC,MAAD,EAASC,OAAT;AAAA,qBAAqBD,MAAM,CAACjC,OAAP,CAAekC,OAAf,EAAwB,GAAxB,CAArB;AAAA,aAA7B,EAAgFzD,OAAhF,CAAP;AACH,W,CACD;;;;0CACgBA,O,EAAS0D,a,EAAeC,Y,EAAcC,Y,EAAcxD,uB,EAAyB;AAAA;;AACzF,mBAAOY,YAAY,CAAChB,OAAD,EAAU,UAACU,IAAD,EAAU;AACnC,kBAAII,QAAQ,GAAGJ,IAAI,CAACI,QAApB;AACA,kBAAII,OAAO,GAAGR,IAAI,CAACQ,OAAnB;;AACA,kBAAIR,IAAI,CAACI,QAAL,CAAc,CAAd,MAAqB,GAAzB,EAA8B;AAC1BA,wBAAQ,GACJ,KAAI,CAAC+C,cAAL,CAAoBnD,IAAI,CAACI,QAAzB,EAAmC4C,aAAnC,EAAkDC,YAAlD,EAAgEC,YAAhE,EAA8E,KAAI,CAAC7D,aAAnF,CADJ;AAEH,eAHD,MAIK,IAAIW,IAAI,CAACI,QAAL,CAAcG,UAAd,CAAyB,QAAzB,KAAsCP,IAAI,CAACI,QAAL,CAAcG,UAAd,CAAyB,WAAzB,CAAtC,IACLP,IAAI,CAACI,QAAL,CAAcG,UAAd,CAAyB,OAAzB,CADK,IACgCP,IAAI,CAACI,QAAL,CAAcG,UAAd,CAAyB,WAAzB,CADpC,EAC2E;AAC5EC,uBAAO,GAAG,KAAI,CAACW,eAAL,CAAqBnB,IAAI,CAACQ,OAA1B,EAAmCwC,aAAnC,EAAkDC,YAAlD,EAAgEC,YAAhE,EAA8ExD,uBAA9E,CAAV;AACH;;AACDU,sBAAQ,GAAGA,QAAQ,CAACS,OAAT,CAAiB,SAAjB,EAA4B,GAA5B,EAAiCO,IAAjC,EAAX;AACA,qBAAO,IAAIgC,OAAJ,CAAYhD,QAAZ,EAAsBI,OAAtB,CAAP;AACH,aAbkB,CAAnB;AAcH;;;yCACcJ,Q,EAAU4C,a,EAAeC,Y,EAAcC,Y,EAAcG,M,EAAQ;AAAA;;AACxE,mBAAOjD,QAAQ,CAACgC,KAAT,CAAe,GAAf,EACFkB,GADE,CACE,UAAAC,WAAW,EAAI;AACpB,kBAAIL,YAAY,IAAIK,WAAW,CAACb,OAAZ,CAAoB,MAAMQ,YAA1B,IAA0C,CAAC,CAA/D,EAAkE;AAC9D,uBAAOK,WAAW,CAACnC,IAAZ,EAAP;AACH;;AACD,kBAAI,MAAI,CAACoC,qBAAL,CAA2BD,WAA3B,EAAwCP,aAAxC,CAAJ,EAA4D;AACxD,uBAAOK,MAAM,GACT,MAAI,CAACI,yBAAL,CAA+BF,WAA/B,EAA4CP,aAA5C,EAA2DC,YAA3D,EAAyE7B,IAAzE,EADS,GAET,MAAI,CAACsC,mBAAL,CAAyBH,WAAzB,EAAsCP,aAAtC,EAAqDC,YAArD,EAAmE7B,IAAnE,EAFJ;AAGH,eAJD,MAKK;AACD,uBAAOmC,WAAW,CAACnC,IAAZ,EAAP;AACH;AACJ,aAbM,EAcFT,IAdE,CAcG,IAdH,CAAP;AAeH;;;gDACqBP,Q,EAAU4C,a,EAAe;AAC3C,gBAAMW,EAAE,GAAG,KAAKC,iBAAL,CAAuBZ,aAAvB,CAAX;;AACA,mBAAO,CAACW,EAAE,CAACE,IAAH,CAAQzD,QAAR,CAAR;AACH;;;4CACiB4C,a,EAAe;AAC7B,gBAAMc,GAAG,GAAG,KAAZ;AACA,gBAAMC,GAAG,GAAG,KAAZ;AACAf,yBAAa,GAAGA,aAAa,CAACnC,OAAd,CAAsBiD,GAAtB,EAA2B,KAA3B,EAAkCjD,OAAlC,CAA0CkD,GAA1C,EAA+C,KAA/C,CAAhB;AACA,mBAAO,IAAIC,MAAJ,CAAW,OAAOhB,aAAP,GAAuB,GAAvB,GAA6BiB,iBAAxC,EAA2D,GAA3D,CAAP;AACH;;;8CACmB7D,Q,EAAU4C,a,EAAeC,Y,EAAc;AACvD;AACA,mBAAO,KAAKiB,yBAAL,CAA+B9D,QAA/B,EAAyC4C,aAAzC,EAAwDC,YAAxD,CAAP;AACH,W,CACD;;;;oDAC0B7C,Q,EAAU4C,a,EAAeC,Y,EAAc;AAC7D;AACAkB,2BAAe,CAACC,SAAhB,GAA4B,CAA5B;;AACA,gBAAID,eAAe,CAACN,IAAhB,CAAqBzD,QAArB,CAAJ,EAAoC;AAChC,kBAAMiE,SAAS,GAAG,KAAKhF,aAAL,cAAyB4D,YAAzB,IAA0CD,aAA5D;AACA,qBAAO5C,QAAQ,CACVS,OADE,CACMyD,2BADN,EACmC,UAACC,CAAD,EAAInE,QAAJ,EAAiB;AACvD,uBAAOA,QAAQ,CAACS,OAAT,CAAiB,iBAAjB,EAAoC,UAAC0D,CAAD,EAAIC,MAAJ,EAAYC,KAAZ,EAAmBC,KAAnB,EAA6B;AACpE,yBAAOF,MAAM,GAAGH,SAAT,GAAqBI,KAArB,GAA6BC,KAApC;AACH,iBAFM,CAAP;AAGH,eALM,EAMF7D,OANE,CAMMsD,eANN,EAMuBE,SAAS,GAAG,GANnC,CAAP;AAOH;;AACD,mBAAOrB,aAAa,GAAG,GAAhB,GAAsB5C,QAA7B;AACH;;;oDACyBA,Q,EAAU4C,a,EAAeC,Y,EAAc;AAAA;;AAC7D,gBAAM0B,IAAI,GAAG,kBAAb;AACA3B,yBAAa,GAAGA,aAAa,CAACnC,OAAd,CAAsB8D,IAAtB,EAA4B,UAACJ,CAAD;AAAA;AAAA,aAA5B,CAAhB;AACA,gBAAMK,SAAS,GAAG,MAAM5B,aAAxB;;AACA,gBAAM6B,kBAAkB,GAAG,SAArBA,kBAAqB,CAACtC,CAAD,EAAO;AAC9B,kBAAIuC,OAAO,GAAGvC,CAAC,CAACnB,IAAF,EAAd;;AACA,kBAAI,CAAC0D,OAAL,EAAc;AACV,uBAAO,EAAP;AACH;;AACD,kBAAIvC,CAAC,CAACG,OAAF,CAAUX,yBAAV,IAAuC,CAAC,CAA5C,EAA+C;AAC3C+C,uBAAO,GAAG,MAAI,CAACZ,yBAAL,CAA+B3B,CAA/B,EAAkCS,aAAlC,EAAiDC,YAAjD,CAAV;AACH,eAFD,MAGK;AACD;AACA,oBAAM8B,CAAC,GAAGxC,CAAC,CAAC1B,OAAF,CAAUsD,eAAV,EAA2B,EAA3B,CAAV;;AACA,oBAAIY,CAAC,CAAC7E,MAAF,GAAW,CAAf,EAAkB;AACd,sBAAM8E,OAAO,GAAGD,CAAC,CAACE,KAAF,CAAQ,iBAAR,CAAhB;;AACA,sBAAID,OAAJ,EAAa;AACTF,2BAAO,GAAGE,OAAO,CAAC,CAAD,CAAP,GAAaJ,SAAb,GAAyBI,OAAO,CAAC,CAAD,CAAhC,GAAsCA,OAAO,CAAC,CAAD,CAAvD;AACH;AACJ;AACJ;;AACD,qBAAOF,OAAP;AACH,aAnBD;;AAoBA,gBAAMI,WAAW,GAAG,IAAIC,YAAJ,CAAiB/E,QAAjB,CAApB;AACAA,oBAAQ,GAAG8E,WAAW,CAAC1E,OAAZ,EAAX;AACA,gBAAI4E,cAAc,GAAG,EAArB;AACA,gBAAIC,UAAU,GAAG,CAAjB;AACA,gBAAIC,GAAJ;AACA,gBAAMC,GAAG,GAAG,qBAAZ,CA7B6D,CA8B7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAMC,OAAO,GAAGpF,QAAQ,CAACsC,OAAT,CAAiBX,yBAAjB,IAA8C,CAAC,CAA/D,CAzC6D,CA0C7D;;AACA,gBAAI0D,WAAW,GAAG,CAACD,OAAnB;;AACA,mBAAO,CAACF,GAAG,GAAGC,GAAG,CAACG,IAAJ,CAAStF,QAAT,CAAP,MAA+B,IAAtC,EAA4C;AACxC,kBAAMuF,SAAS,GAAGL,GAAG,CAAC,CAAD,CAArB;;AACA,kBAAM7C,KAAI,GAAGrC,QAAQ,CAACwF,KAAT,CAAeP,UAAf,EAA2BC,GAAG,CAACO,KAA/B,EAAsCzE,IAAtC,EAAb;;AACAqE,yBAAW,GAAGA,WAAW,IAAIhD,KAAI,CAACC,OAAL,CAAaX,yBAAb,IAA0C,CAAC,CAAxE;AACA,kBAAM+D,UAAU,GAAGL,WAAW,GAAGZ,kBAAkB,CAACpC,KAAD,CAArB,GAA8BA,KAA5D;AACA2C,4BAAc,cAAOU,UAAP,cAAqBH,SAArB,MAAd;AACAN,wBAAU,GAAGE,GAAG,CAACnB,SAAjB;AACH;;AACD,gBAAM3B,IAAI,GAAGrC,QAAQ,CAAC2F,SAAT,CAAmBV,UAAnB,CAAb;AACAI,uBAAW,GAAGA,WAAW,IAAIhD,IAAI,CAACC,OAAL,CAAaX,yBAAb,IAA0C,CAAC,CAAxE;AACAqD,0BAAc,IAAIK,WAAW,GAAGZ,kBAAkB,CAACpC,IAAD,CAArB,GAA8BA,IAA3D,CAtD6D,CAuD7D;;AACA,mBAAOyC,WAAW,CAACc,OAAZ,CAAoBZ,cAApB,CAAP;AACH;;;uDAC4BhF,Q,EAAU;AACnCA,oBAAQ,GAAGA,QAAQ,CACdS,OADM,CACEoF,mBADF,EACuBC,oBADvB,EAENrF,OAFM,CAEEsF,YAFF,EAEgBxD,aAFhB,EAGN9B,OAHM,CAGEuF,eAHF,EAGmBC,gBAHnB,CAAX;AAIA,mBAAOjG,QAAP;AACH;;;;;;UAEC+E,Y;AACF,8BAAY/E,QAAZ,EAAsB;AAAA;;AAAA;;AAClB,eAAKkG,YAAL,GAAoB,EAApB;AACA,eAAKT,KAAL,GAAa,CAAb,CAFkB,CAGlB;AACA;;AACAzF,kBAAQ,GAAGA,QAAQ,CAACS,OAAT,CAAiB,eAAjB,EAAkC,UAAC0D,CAAD,EAAIgC,IAAJ,EAAa;AACtD,gBAAMlC,SAAS,kBAAW,MAAI,CAACwB,KAAhB,OAAf;;AACA,kBAAI,CAACS,YAAL,CAAkBjG,IAAlB,CAAuBkG,IAAvB;;AACA,kBAAI,CAACV,KAAL;AACA,mBAAOxB,SAAP;AACH,WALU,CAAX,CALkB,CAWlB;AACA;;AACA,eAAKmC,QAAL,GAAgBpG,QAAQ,CAACS,OAAT,CAAiB,2BAAjB,EAA8C,UAAC0D,CAAD,EAAIkC,MAAJ,EAAYC,GAAZ,EAAoB;AAC9E,gBAAMrC,SAAS,kBAAW,MAAI,CAACwB,KAAhB,OAAf;;AACA,kBAAI,CAACS,YAAL,CAAkBjG,IAAlB,CAAuBqG,GAAvB;;AACA,kBAAI,CAACb,KAAL;AACA,mBAAOY,MAAM,GAAGpC,SAAhB;AACH,WALe,CAAhB;AAMH;;;;kCACO7D,O,EAAS;AAAA;;AACb,mBAAOA,OAAO,CAACK,OAAR,CAAgB,eAAhB,EAAiC,UAAC0D,CAAD,EAAIsB,KAAJ;AAAA,qBAAc,MAAI,CAACS,YAAL,CAAkB,CAACT,KAAnB,CAAd;AAAA,aAAjC,CAAP;AACH;;;oCACS;AAAE,mBAAO,KAAKW,QAAZ;AAAuB;;;;;;UAEjCpD,O,GACF,iBAAYhD,QAAZ,EAAsBI,OAAtB,EAA+B;AAAA;;AAC3B,aAAKJ,QAAL,GAAgBA,QAAhB;AACA,aAAKI,OAAL,GAAeA,OAAf;AACH,O;;UAECmG,uB,GACF,iCAAYC,aAAZ,EAA2BC,MAA3B,EAAmC;AAAA;;AAC/B,aAAKD,aAAL,GAAqBA,aAArB;AACA,aAAKC,MAAL,GAAcA,MAAd;AACH,O;;AAEL,UAAMlE,aAAa,GAAG,gBAAtB;AACA,UAAM0D,gBAAgB,GAAG,mBAAzB,C,CACA;;AACA,UAAMH,oBAAoB,GAAG,mBAA7B;;AACA,UAAMY,YAAY,GAAG,aACjB,2BADiB,GAEjB,gBAFJ;;AAGA,UAAMxF,eAAe,GAAG,IAAI0C,MAAJ,CAAW,MAAMrB,aAAN,GAAsBmE,YAAjC,EAA+C,KAA/C,CAAxB;;AACA,UAAM9E,sBAAsB,GAAG,IAAIgC,MAAJ,CAAW,MAAMkC,oBAAN,GAA6BY,YAAxC,EAAsD,KAAtD,CAA/B;;AACA,UAAMpF,kBAAkB,GAAG,IAAIsC,MAAJ,CAAW,MAAMqC,gBAAN,GAAyBS,YAApC,EAAkD,KAAlD,CAA3B;;AACA,UAAM/E,yBAAyB,GAAGY,aAAa,GAAG,gBAAlD;;AACA,UAAM2B,2BAA2B,GAAG,sCAApC;AACA,UAAM1B,qBAAqB,GAAG,CAC1B,WAD0B,EAE1B,YAF0B,CAA9B;AAIA,UAAMqB,iBAAiB,GAAG,6BAA1B;AACA,UAAME,eAAe,GAAG,mBAAxB;AACA,UAAMgC,YAAY,GAAG,UAArB;AACA,UAAMC,eAAe,GAAG,cAAxB;AACA,UAAMH,mBAAmB,GAAG,kBAA5B;AACA,UAAMc,UAAU,GAAG,sBAAnB;;AACA,UAAMlH,aAAa,GAAG,SAAhBA,aAAgB,CAACmH,KAAD,EAAW;AAC7B,eAAOA,KAAK,CAACnG,OAAN,CAAckG,UAAd,EAA0B,EAA1B,CAAP;AACH,OAFD;;AAGA,UAAME,kBAAkB,GAAG,8CAA3B;;AACA,UAAMrH,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACoH,KAAD,EAAW;AACvC,eAAOA,KAAK,CAAC/B,KAAN,CAAYgC,kBAAZ,KAAmC,EAA1C;AACH,OAFD;;AAGA,UAAMC,OAAO,GAAG,uDAAhB;AACA,UAAMC,QAAQ,GAAG,SAAjB;AACA,UAAMC,UAAU,GAAG,GAAnB;AACA,UAAMC,WAAW,GAAG,GAApB;AACA,UAAMC,iBAAiB,GAAG,SAA1B;;AACA,UAAMhH,YAAY,GAAG,SAAfA,YAAe,CAAC0G,KAAD,EAAQO,YAAR,EAAyB;AAC1C,YAAMC,sBAAsB,GAAGC,YAAY,CAACT,KAAD,CAA3C;AACA,YAAIU,cAAc,GAAG,CAArB;AACA,eAAOF,sBAAsB,CAACZ,aAAvB,CAAqC/F,OAArC,CAA6CqG,OAA7C,EAAsD,YAAU;AACnE,cAAM9G,QAAQ,mDAAd;AACA,cAAII,OAAO,GAAG,EAAd;AACA,cAAIqB,MAAM,mDAAV;AACA,cAAI8F,aAAa,GAAG,EAApB;;AACA,cAAI9F,MAAM,IAAIA,MAAM,CAACtB,UAAP,CAAkB,MAAM+G,iBAAxB,CAAd,EAA0D;AACtD9G,mBAAO,GAAGgH,sBAAsB,CAACX,MAAvB,CAA8Ba,cAAc,EAA5C,CAAV;AACA7F,kBAAM,GAAGA,MAAM,CAACkE,SAAP,CAAiBuB,iBAAiB,CAACpH,MAAlB,GAA2B,CAA5C,CAAT;AACAyH,yBAAa,GAAG,GAAhB;AACH;;AACD,cAAM3H,IAAI,GAAGuH,YAAY,CAAC,IAAInE,OAAJ,CAAYhD,QAAZ,EAAsBI,OAAtB,CAAD,CAAzB;AACA,oFAAiBR,IAAI,CAACI,QAAtB,kEAAwCuH,aAAxC,SAAwD3H,IAAI,CAACQ,OAA7D,SAAuEqB,MAAvE;AACH,SAZM,CAAP;AAaH,OAhBD;;AAiBA,UAAM4F,YAAY,GAAG,SAAfA,YAAe,CAACT,KAAD,EAAW;AAC5B,YAAMY,UAAU,GAAGZ,KAAK,CAAC5E,KAAN,CAAY+E,QAAZ,CAAnB;AACA,YAAMU,WAAW,GAAG,EAApB;AACA,YAAMC,aAAa,GAAG,EAAtB;AACA,YAAIC,YAAY,GAAG,CAAnB;AACA,YAAIC,iBAAiB,GAAG,EAAxB;;AACA,aAAK,IAAIC,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAGL,UAAU,CAAC1H,MAA/C,EAAuD+H,SAAS,EAAhE,EAAoE;AAChE,cAAMxF,IAAI,GAAGmF,UAAU,CAACK,SAAD,CAAvB;;AACA,cAAIxF,IAAI,KAAK4E,WAAb,EAA0B;AACtBU,wBAAY;AACf;;AACD,cAAIA,YAAY,GAAG,CAAnB,EAAsB;AAClBC,6BAAiB,CAAC3H,IAAlB,CAAuBoC,IAAvB;AACH,WAFD,MAGK;AACD,gBAAIuF,iBAAiB,CAAC9H,MAAlB,GAA2B,CAA/B,EAAkC;AAC9B4H,2BAAa,CAACzH,IAAd,CAAmB2H,iBAAiB,CAACrH,IAAlB,CAAuB,EAAvB,CAAnB;AACAkH,yBAAW,CAACxH,IAAZ,CAAiBiH,iBAAjB;AACAU,+BAAiB,GAAG,EAApB;AACH;;AACDH,uBAAW,CAACxH,IAAZ,CAAiBoC,IAAjB;AACH;;AACD,cAAIA,IAAI,KAAK2E,UAAb,EAAyB;AACrBW,wBAAY;AACf;AACJ;;AACD,YAAIC,iBAAiB,CAAC9H,MAAlB,GAA2B,CAA/B,EAAkC;AAC9B4H,uBAAa,CAACzH,IAAd,CAAmB2H,iBAAiB,CAACrH,IAAlB,CAAuB,EAAvB,CAAnB;AACAkH,qBAAW,CAACxH,IAAZ,CAAiBiH,iBAAjB;AACH;;AACD,eAAO,IAAIX,uBAAJ,CAA4BkB,WAAW,CAAClH,IAAZ,CAAiB,EAAjB,CAA5B,EAAkDmH,aAAlD,CAAP;AACH,OA/BD;;AAgCA,UAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAC5I,OAAD,EAAUC,OAAV,EAAmBG,uBAAnB,EAA+C;AAC5D,YAAMyI,EAAE,GAAG,IAAI/I,SAAJ,EAAX;AACA,eAAO+I,EAAE,CAACC,WAAH,CAAe9I,OAAf,EAAwBC,OAAxB,EAAiCA,OAAO,GAAG,IAA3C,EAAiDA,OAAO,GAAG,IAA3D,EAAiEG,uBAAjE,CAAP;AACH,OAHD","file":"shadow-css-bbdf056f-05cd1ccb-js-es5.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nclass ShadowCss {\n    constructor() {\n        this.strictStyling = true;\n    }\n    shimCssText(cssText, scopeId, hostScopeId = '', slotScopeId = '', commentOriginalSelector = false) {\n        const commentsWithHash = extractCommentsWithHash(cssText);\n        cssText = stripComments(cssText);\n        const orgSelectors = [];\n        if (commentOriginalSelector) {\n            const processCommentedSelector = (rule) => {\n                const placeholder = `/*!@___${orgSelectors.length}___*/`;\n                const comment = `/*!@${rule.selector}*/`;\n                orgSelectors.push({ placeholder, comment });\n                rule.selector = placeholder + rule.selector;\n                return rule;\n            };\n            cssText = processRules(cssText, rule => {\n                if (rule.selector[0] !== '@') {\n                    return processCommentedSelector(rule);\n                }\n                else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                    rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                    rule.content = processRules(rule.content, processCommentedSelector);\n                    return rule;\n                }\n                return rule;\n            });\n        }\n        const scopedCssText = this._scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\n        cssText = [scopedCssText, ...commentsWithHash].join('\\n');\n        if (commentOriginalSelector) {\n            orgSelectors.forEach(({ placeholder, comment }) => {\n                cssText = cssText.replace(placeholder, comment);\n            });\n        }\n        return cssText;\n    }\n    _scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertColonSlotted(cssText, slotScopeId);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeId) {\n            cssText = this._scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\n        }\n        cssText = cssText.replace(/-shadowcsshost-no-combinator/g, `.${hostScopeId}`);\n        cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n        return cssText.trim();\n    }\n    /*\n     * convert a rule like :host(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar\n    */\n    _convertColonHost(cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    }\n    /*\n   * convert a rule like ::slotted(.foo) { }\n  */\n    _convertColonSlotted(cssText, slotAttr) {\n        const regExp = _cssColonSlottedRe;\n        return cssText.replace(regExp, (...m) => {\n            if (m[2]) {\n                const compound = m[2].trim();\n                const suffix = m[3];\n                const sel = '.' + slotAttr + ' > ' + compound + suffix;\n                return sel;\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    }\n    /*\n     * convert a rule like :host-context(.foo) > .bar { }\n     *\n     * to\n     *\n     * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n     *\n     * and\n     *\n     * :host-context(.foo:host) .bar { ... }\n     *\n     * to\n     *\n     * .foo<scopeName> .bar { ... }\n    */\n    _convertColonHostContext(cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    }\n    _convertColonRule(cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, (...m) => {\n            if (m[2]) {\n                const parts = m[2].split(',');\n                const r = [];\n                for (let i = 0; i < parts.length; i++) {\n                    const p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    }\n    _colonHostContextPartReplacer(host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    }\n    _colonHostPartReplacer(host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    }\n    /*\n     * Convert combinators like ::shadow and pseudo-elements like ::content\n     * by replacing with space.\n    */\n    _convertShadowDOMSelectors(cssText) {\n        return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);\n    }\n    // change a selector like 'div' to 'name div'\n    _scopeSelectors(cssText, scopeSelector, hostSelector, slotSelector, commentOriginalSelector) {\n        return processRules(cssText, (rule) => {\n            let selector = rule.selector;\n            let content = rule.content;\n            if (rule.selector[0] !== '@') {\n                selector =\n                    this._scopeSelector(rule.selector, scopeSelector, hostSelector, slotSelector, this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = this._scopeSelectors(rule.content, scopeSelector, hostSelector, slotSelector, commentOriginalSelector);\n            }\n            selector = selector.replace(/\\s{2,}/g, ' ').trim();\n            return new CssRule(selector, content);\n        });\n    }\n    _scopeSelector(selector, scopeSelector, hostSelector, slotSelector, strict) {\n        return selector.split(',')\n            .map(shallowPart => {\n            if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n                return shallowPart.trim();\n            }\n            if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                return strict ?\n                    this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector).trim() :\n                    this._applySelectorScope(shallowPart, scopeSelector, hostSelector).trim();\n            }\n            else {\n                return shallowPart.trim();\n            }\n        })\n            .join(', ');\n    }\n    _selectorNeedsScoping(selector, scopeSelector) {\n        const re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    }\n    _makeScopeMatcher(scopeSelector) {\n        const lre = /\\[/g;\n        const rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    }\n    _applySelectorScope(selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    }\n    // scope via name and [is=name]\n    _applySimpleSelectorScope(selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            const replaceBy = this.strictStyling ? `.${hostSelector}` : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, (_, selector) => {\n                return selector.replace(/([^:]*)(:*)(.*)/, (_, before, colon, after) => {\n                    return before + replaceBy + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    }\n    _applyStrictSelectorScope(selector, scopeSelector, hostSelector) {\n        const isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, (_, ...parts) => parts[0]);\n        const className = '.' + scopeSelector;\n        const _scopeSelectorPart = (p) => {\n            let scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                const t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    const matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + className + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        const safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        let scopedSelector = '';\n        let startIndex = 0;\n        let res;\n        const sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        const hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        let shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            const separator = res[1];\n            const part = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n            const scopedPart = shouldScope ? _scopeSelectorPart(part) : part;\n            scopedSelector += `${scopedPart} ${separator} `;\n            startIndex = sep.lastIndex;\n        }\n        const part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    }\n    _insertPolyfillHostInCssText(selector) {\n        selector = selector\n            .replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost)\n            .replace(_colonSlottedRe, _polyfillSlotted);\n        return selector;\n    }\n}\nclass SafeSelector {\n    constructor(selector) {\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, (_, keep) => {\n            const replaceBy = `__ph-${this.index}__`;\n            this.placeholders.push(keep);\n            this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, (_, pseudo, exp) => {\n            const replaceBy = `__ph-${this.index}__`;\n            this.placeholders.push(exp);\n            this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    restore(content) {\n        return content.replace(/__ph-(\\d+)__/g, (_, index) => this.placeholders[+index]);\n    }\n    content() { return this._content; }\n}\nclass CssRule {\n    constructor(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n}\nclass StringWithEscapedBlocks {\n    constructor(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n}\nconst _polyfillHost = '-shadowcsshost';\nconst _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nconst _polyfillHostContext = '-shadowcsscontext';\nconst _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nconst _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nconst _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nconst _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nconst _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nconst _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nconst _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g\n];\nconst _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nconst _polyfillHostRe = /-shadowcsshost/gim;\nconst _colonHostRe = /:host/gim;\nconst _colonSlottedRe = /::slotted/gim;\nconst _colonHostContextRe = /:host-context/gim;\nconst _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nconst stripComments = (input) => {\n    return input.replace(_commentRe, '');\n};\nconst _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nconst extractCommentsWithHash = (input) => {\n    return input.match(_commentWithHashRe) || [];\n};\nconst _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nconst _curlyRe = /([{}])/g;\nconst OPEN_CURLY = '{';\nconst CLOSE_CURLY = '}';\nconst BLOCK_PLACEHOLDER = '%BLOCK%';\nconst processRules = (input, ruleCallback) => {\n    const inputWithEscapedBlocks = escapeBlocks(input);\n    let nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, (...m) => {\n        const selector = m[2];\n        let content = '';\n        let suffix = m[4];\n        let contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        const rule = ruleCallback(new CssRule(selector, content));\n        return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;\n    });\n};\nconst escapeBlocks = (input) => {\n    const inputParts = input.split(_curlyRe);\n    const resultParts = [];\n    const escapedBlocks = [];\n    let bracketCount = 0;\n    let currentBlockParts = [];\n    for (let partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        const part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n};\nconst scopeCss = (cssText, scopeId, commentOriginalSelector) => {\n    const sc = new ShadowCss();\n    return sc.shimCssText(cssText, scopeId, scopeId + '-h', scopeId + '-s', commentOriginalSelector);\n};\n\nexport { ShadowCss, scopeCss };\n"]}