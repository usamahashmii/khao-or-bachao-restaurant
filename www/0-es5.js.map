{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/index-8421816f.js"],"names":["GestureController","gestureId","requestedStart","Map","disabledGestures","disabledScroll","Set","config","GestureDelegate","newID","name","priority","disableScroll","opts","BlockerDelegate","disable","gestureName","id","canStart","set","start","maxPriority","forEach","value","Math","max","capturedId","clear","event","CustomEvent","detail","document","dispatchEvent","undefined","get","add","size","body","classList","BACKDROP_NO_SCROLL","remove","isDisabled","disabled","ctrl","captured","capture","release","enableScroll","gesture","disableGesture","enableGesture","unblock","GESTURE_CONTROLLER","addEventListener","el","eventName","callback","listenerOpts","supportsPassive","passive","node","_sPassive","Object","defineProperty","e","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","Date","now","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","setDisabled","destroy","Document","ownerDocument","createPanRecognizer","direction","thresh","maxAngle","radians","PI","isDirX","maxCosine","cos","threshold","startX","startY","dirty","isPan","x","y","detect","deltaX","deltaY","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","createGesture","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","gesturePriority","onWillStart","onStart","onEnd","notCaptured","onMove","type","startTimeStamp","currentX","currentY","velocityX","velocityY","timeStamp","data","pan","updateDetail","tryToCapturePan","calcGestureData","fireOnMove","abortGesture","then","fireOnStart","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","timestamp","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY"],"mappings":"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","file":"0-es5.js","sourcesContent":["import { w as writeTask } from './chunk-84f6bf13.js';\nimport './chunk-1074393c.js';\n\nclass GestureController {\r\n    constructor() {\r\n        this.gestureId = 0;\r\n        this.requestedStart = new Map();\r\n        this.disabledGestures = new Map();\r\n        this.disabledScroll = new Set();\r\n    }\r\n    /**\r\n     * Creates a gesture delegate based on the GestureConfig passed\r\n     */\r\n    createGesture(config) {\r\n        return new GestureDelegate(this, this.newID(), config.name, config.priority || 0, !!config.disableScroll);\r\n    }\r\n    /**\r\n     * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\r\n     */\r\n    createBlocker(opts = {}) {\r\n        return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\r\n    }\r\n    start(gestureName, id, priority) {\r\n        if (!this.canStart(gestureName)) {\r\n            this.requestedStart.delete(id);\r\n            return false;\r\n        }\r\n        this.requestedStart.set(id, priority);\r\n        return true;\r\n    }\r\n    capture(gestureName, id, priority) {\r\n        if (!this.start(gestureName, id, priority)) {\r\n            return false;\r\n        }\r\n        const requestedStart = this.requestedStart;\r\n        let maxPriority = -10000;\r\n        requestedStart.forEach(value => {\r\n            maxPriority = Math.max(maxPriority, value);\r\n        });\r\n        if (maxPriority === priority) {\r\n            this.capturedId = id;\r\n            requestedStart.clear();\r\n            const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\r\n            document.dispatchEvent(event);\r\n            return true;\r\n        }\r\n        requestedStart.delete(id);\r\n        return false;\r\n    }\r\n    release(id) {\r\n        this.requestedStart.delete(id);\r\n        if (this.capturedId === id) {\r\n            this.capturedId = undefined;\r\n        }\r\n    }\r\n    disableGesture(gestureName, id) {\r\n        let set = this.disabledGestures.get(gestureName);\r\n        if (set === undefined) {\r\n            set = new Set();\r\n            this.disabledGestures.set(gestureName, set);\r\n        }\r\n        set.add(id);\r\n    }\r\n    enableGesture(gestureName, id) {\r\n        const set = this.disabledGestures.get(gestureName);\r\n        if (set !== undefined) {\r\n            set.delete(id);\r\n        }\r\n    }\r\n    disableScroll(id) {\r\n        this.disabledScroll.add(id);\r\n        if (this.disabledScroll.size === 1) {\r\n            document.body.classList.add(BACKDROP_NO_SCROLL);\r\n        }\r\n    }\r\n    enableScroll(id) {\r\n        this.disabledScroll.delete(id);\r\n        if (this.disabledScroll.size === 0) {\r\n            document.body.classList.remove(BACKDROP_NO_SCROLL);\r\n        }\r\n    }\r\n    canStart(gestureName) {\r\n        if (this.capturedId !== undefined) {\r\n            // a gesture already captured\r\n            return false;\r\n        }\r\n        if (this.isDisabled(gestureName)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    isCaptured() {\r\n        return this.capturedId !== undefined;\r\n    }\r\n    isScrollDisabled() {\r\n        return this.disabledScroll.size > 0;\r\n    }\r\n    isDisabled(gestureName) {\r\n        const disabled = this.disabledGestures.get(gestureName);\r\n        if (disabled && disabled.size > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    newID() {\r\n        this.gestureId++;\r\n        return this.gestureId;\r\n    }\r\n}\r\nclass GestureDelegate {\r\n    constructor(ctrl, id, name, priority, disableScroll) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.disableScroll = disableScroll;\r\n        this.priority = priority * 1000000 + id;\r\n        this.ctrl = ctrl;\r\n    }\r\n    canStart() {\r\n        if (!this.ctrl) {\r\n            return false;\r\n        }\r\n        return this.ctrl.canStart(this.name);\r\n    }\r\n    start() {\r\n        if (!this.ctrl) {\r\n            return false;\r\n        }\r\n        return this.ctrl.start(this.name, this.id, this.priority);\r\n    }\r\n    capture() {\r\n        if (!this.ctrl) {\r\n            return false;\r\n        }\r\n        const captured = this.ctrl.capture(this.name, this.id, this.priority);\r\n        if (captured && this.disableScroll) {\r\n            this.ctrl.disableScroll(this.id);\r\n        }\r\n        return captured;\r\n    }\r\n    release() {\r\n        if (this.ctrl) {\r\n            this.ctrl.release(this.id);\r\n            if (this.disableScroll) {\r\n                this.ctrl.enableScroll(this.id);\r\n            }\r\n        }\r\n    }\r\n    destroy() {\r\n        this.release();\r\n        this.ctrl = undefined;\r\n    }\r\n}\r\nclass BlockerDelegate {\r\n    constructor(ctrl, id, disable, disableScroll) {\r\n        this.id = id;\r\n        this.disable = disable;\r\n        this.disableScroll = disableScroll;\r\n        this.ctrl = ctrl;\r\n    }\r\n    block() {\r\n        if (!this.ctrl) {\r\n            return;\r\n        }\r\n        if (this.disable) {\r\n            for (const gesture of this.disable) {\r\n                this.ctrl.disableGesture(gesture, this.id);\r\n            }\r\n        }\r\n        if (this.disableScroll) {\r\n            this.ctrl.disableScroll(this.id);\r\n        }\r\n    }\r\n    unblock() {\r\n        if (!this.ctrl) {\r\n            return;\r\n        }\r\n        if (this.disable) {\r\n            for (const gesture of this.disable) {\r\n                this.ctrl.enableGesture(gesture, this.id);\r\n            }\r\n        }\r\n        if (this.disableScroll) {\r\n            this.ctrl.enableScroll(this.id);\r\n        }\r\n    }\r\n    destroy() {\r\n        this.unblock();\r\n        this.ctrl = undefined;\r\n    }\r\n}\r\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\r\nconst GESTURE_CONTROLLER = new GestureController();\n\nconst addEventListener = (el, eventName, callback, opts) => {\r\n    // use event listener options when supported\r\n    // otherwise it's just a boolean for the \"capture\" arg\r\n    const listenerOpts = supportsPassive(el) ? {\r\n        'capture': !!opts.capture,\r\n        'passive': !!opts.passive,\r\n    } : !!opts.capture;\r\n    let add;\r\n    let remove;\r\n    if (el['__zone_symbol__addEventListener']) {\r\n        add = '__zone_symbol__addEventListener';\r\n        remove = '__zone_symbol__removeEventListener';\r\n    }\r\n    else {\r\n        add = 'addEventListener';\r\n        remove = 'removeEventListener';\r\n    }\r\n    el[add](eventName, callback, listenerOpts);\r\n    return () => {\r\n        el[remove](eventName, callback, listenerOpts);\r\n    };\r\n};\r\nconst supportsPassive = (node) => {\r\n    if (_sPassive === undefined) {\r\n        try {\r\n            const opts = Object.defineProperty({}, 'passive', {\r\n                get: () => {\r\n                    _sPassive = true;\r\n                }\r\n            });\r\n            node.addEventListener('optsTest', () => { return; }, opts);\r\n        }\r\n        catch (e) {\r\n            _sPassive = false;\r\n        }\r\n    }\r\n    return !!_sPassive;\r\n};\r\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\r\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\r\n    let rmTouchStart;\r\n    let rmTouchMove;\r\n    let rmTouchEnd;\r\n    let rmTouchCancel;\r\n    let rmMouseStart;\r\n    let rmMouseMove;\r\n    let rmMouseUp;\r\n    let lastTouchEvent = 0;\r\n    const handleTouchStart = (ev) => {\r\n        lastTouchEvent = Date.now() + MOUSE_WAIT;\r\n        if (!pointerDown(ev)) {\r\n            return;\r\n        }\r\n        if (!rmTouchMove && pointerMove) {\r\n            rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\r\n        }\r\n        if (!rmTouchEnd) {\r\n            rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\r\n        }\r\n        if (!rmTouchCancel) {\r\n            rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\r\n        }\r\n    };\r\n    const handleMouseDown = (ev) => {\r\n        if (lastTouchEvent > Date.now()) {\r\n            return;\r\n        }\r\n        if (!pointerDown(ev)) {\r\n            return;\r\n        }\r\n        if (!rmMouseMove && pointerMove) {\r\n            rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\r\n        }\r\n        if (!rmMouseUp) {\r\n            rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\r\n        }\r\n    };\r\n    const handleTouchEnd = (ev) => {\r\n        stopTouch();\r\n        if (pointerUp) {\r\n            pointerUp(ev);\r\n        }\r\n    };\r\n    const handleMouseUp = (ev) => {\r\n        stopMouse();\r\n        if (pointerUp) {\r\n            pointerUp(ev);\r\n        }\r\n    };\r\n    const stopTouch = () => {\r\n        if (rmTouchMove) {\r\n            rmTouchMove();\r\n        }\r\n        if (rmTouchEnd) {\r\n            rmTouchEnd();\r\n        }\r\n        if (rmTouchCancel) {\r\n            rmTouchCancel();\r\n        }\r\n        rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\r\n    };\r\n    const stopMouse = () => {\r\n        if (rmMouseMove) {\r\n            rmMouseMove();\r\n        }\r\n        if (rmMouseUp) {\r\n            rmMouseUp();\r\n        }\r\n        rmMouseMove = rmMouseUp = undefined;\r\n    };\r\n    const stop = () => {\r\n        stopTouch();\r\n        stopMouse();\r\n    };\r\n    const setDisabled = (disabled) => {\r\n        if (disabled) {\r\n            if (rmTouchStart) {\r\n                rmTouchStart();\r\n            }\r\n            if (rmMouseStart) {\r\n                rmMouseStart();\r\n            }\r\n            rmTouchStart = rmMouseStart = undefined;\r\n            stop();\r\n        }\r\n        else {\r\n            if (!rmTouchStart) {\r\n                rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\r\n            }\r\n            if (!rmMouseStart) {\r\n                rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\r\n            }\r\n        }\r\n    };\r\n    const destroy = () => {\r\n        setDisabled(true);\r\n        pointerUp = pointerMove = pointerDown = undefined;\r\n    };\r\n    return {\r\n        setDisabled,\r\n        stop,\r\n        destroy\r\n    };\r\n};\r\nconst getDocument = (node) => {\r\n    return node instanceof Document ? node : node.ownerDocument;\r\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\r\n    const radians = maxAngle * (Math.PI / 180);\r\n    const isDirX = direction === 'x';\r\n    const maxCosine = Math.cos(radians);\r\n    const threshold = thresh * thresh;\r\n    let startX = 0;\r\n    let startY = 0;\r\n    let dirty = false;\r\n    let isPan = 0;\r\n    return {\r\n        start(x, y) {\r\n            startX = x;\r\n            startY = y;\r\n            isPan = 0;\r\n            dirty = true;\r\n        },\r\n        detect(x, y) {\r\n            if (!dirty) {\r\n                return false;\r\n            }\r\n            const deltaX = (x - startX);\r\n            const deltaY = (y - startY);\r\n            const distance = deltaX * deltaX + deltaY * deltaY;\r\n            if (distance < threshold) {\r\n                return false;\r\n            }\r\n            const hypotenuse = Math.sqrt(distance);\r\n            const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\r\n            if (cosine > maxCosine) {\r\n                isPan = 1;\r\n            }\r\n            else if (cosine < -maxCosine) {\r\n                isPan = -1;\r\n            }\r\n            else {\r\n                isPan = 0;\r\n            }\r\n            dirty = false;\r\n            return true;\r\n        },\r\n        isGesture() {\r\n            return isPan !== 0;\r\n        },\r\n        getDirection() {\r\n            return isPan;\r\n        }\r\n    };\r\n};\n\nconst createGesture = (config) => {\r\n    let hasCapturedPan = false;\r\n    let hasStartedPan = false;\r\n    let hasFiredStart = true;\r\n    let isMoveQueued = false;\r\n    const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\r\n    const canStart = finalConfig.canStart;\r\n    const onWillStart = finalConfig.onWillStart;\r\n    const onStart = finalConfig.onStart;\r\n    const onEnd = finalConfig.onEnd;\r\n    const notCaptured = finalConfig.notCaptured;\r\n    const onMove = finalConfig.onMove;\r\n    const threshold = finalConfig.threshold;\r\n    const detail = {\r\n        type: 'pan',\r\n        startX: 0,\r\n        startY: 0,\r\n        startTimeStamp: 0,\r\n        currentX: 0,\r\n        currentY: 0,\r\n        velocityX: 0,\r\n        velocityY: 0,\r\n        deltaX: 0,\r\n        deltaY: 0,\r\n        timeStamp: 0,\r\n        event: undefined,\r\n        data: undefined\r\n    };\r\n    const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\r\n    const gesture = GESTURE_CONTROLLER.createGesture({\r\n        name: config.gestureName,\r\n        priority: config.gesturePriority,\r\n        disableScroll: config.disableScroll\r\n    });\r\n    const pointerDown = (ev) => {\r\n        const timeStamp = now(ev);\r\n        if (hasStartedPan || !hasFiredStart) {\r\n            return false;\r\n        }\r\n        updateDetail(ev, detail);\r\n        detail.startX = detail.currentX;\r\n        detail.startY = detail.currentY;\r\n        detail.startTimeStamp = detail.timeStamp = timeStamp;\r\n        detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\r\n        detail.event = ev;\r\n        // Check if gesture can start\r\n        if (canStart && canStart(detail) === false) {\r\n            return false;\r\n        }\r\n        // Release fallback\r\n        gesture.release();\r\n        // Start gesture\r\n        if (!gesture.start()) {\r\n            return false;\r\n        }\r\n        hasStartedPan = true;\r\n        if (threshold === 0) {\r\n            return tryToCapturePan();\r\n        }\r\n        pan.start(detail.startX, detail.startY);\r\n        return true;\r\n    };\r\n    const pointerMove = (ev) => {\r\n        // fast path, if gesture is currently captured\r\n        // do minimum job to get user-land even dispatched\r\n        if (hasCapturedPan) {\r\n            if (!isMoveQueued && hasFiredStart) {\r\n                isMoveQueued = true;\r\n                calcGestureData(detail, ev);\r\n                writeTask(fireOnMove);\r\n            }\r\n            return;\r\n        }\r\n        // gesture is currently being detected\r\n        calcGestureData(detail, ev);\r\n        if (pan.detect(detail.currentX, detail.currentY)) {\r\n            if (!pan.isGesture() || !tryToCapturePan()) {\r\n                abortGesture();\r\n            }\r\n        }\r\n    };\r\n    const fireOnMove = () => {\r\n        // Since fireOnMove is called inside a RAF, onEnd() might be called,\r\n        // we must double check hasCapturedPan\r\n        if (!hasCapturedPan) {\r\n            return;\r\n        }\r\n        isMoveQueued = false;\r\n        if (onMove) {\r\n            onMove(detail);\r\n        }\r\n    };\r\n    const tryToCapturePan = () => {\r\n        if (gesture && !gesture.capture()) {\r\n            return false;\r\n        }\r\n        hasCapturedPan = true;\r\n        hasFiredStart = false;\r\n        // reset start position since the real user-land event starts here\r\n        // If the pan detector threshold is big, not resetting the start position\r\n        // will cause a jump in the animation equal to the detector threshold.\r\n        // the array of positions used to calculate the gesture velocity does not\r\n        // need to be cleaned, more points in the positions array always results in a\r\n        // more accurate value of the velocity.\r\n        detail.startX = detail.currentX;\r\n        detail.startY = detail.currentY;\r\n        detail.startTimeStamp = detail.timeStamp;\r\n        if (onWillStart) {\r\n            onWillStart(detail).then(fireOnStart);\r\n        }\r\n        else {\r\n            fireOnStart();\r\n        }\r\n        return true;\r\n    };\r\n    const fireOnStart = () => {\r\n        if (onStart) {\r\n            onStart(detail);\r\n        }\r\n        hasFiredStart = true;\r\n    };\r\n    const reset = () => {\r\n        hasCapturedPan = false;\r\n        hasStartedPan = false;\r\n        isMoveQueued = false;\r\n        hasFiredStart = true;\r\n        gesture.release();\r\n    };\r\n    // END *************************\r\n    const pointerUp = (ev) => {\r\n        const tmpHasCaptured = hasCapturedPan;\r\n        const tmpHasFiredStart = hasFiredStart;\r\n        reset();\r\n        if (!tmpHasFiredStart) {\r\n            return;\r\n        }\r\n        calcGestureData(detail, ev);\r\n        // Try to capture press\r\n        if (tmpHasCaptured) {\r\n            if (onEnd) {\r\n                onEnd(detail);\r\n            }\r\n            return;\r\n        }\r\n        // Not captured any event\r\n        if (notCaptured) {\r\n            notCaptured(detail);\r\n        }\r\n    };\r\n    const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\r\n        capture: false,\r\n    });\r\n    const abortGesture = () => {\r\n        reset();\r\n        pointerEvents.stop();\r\n        if (notCaptured) {\r\n            notCaptured(detail);\r\n        }\r\n    };\r\n    return {\r\n        setDisabled(disabled) {\r\n            if (disabled && hasCapturedPan) {\r\n                pointerUp(undefined);\r\n            }\r\n            pointerEvents.setDisabled(disabled);\r\n        },\r\n        destroy() {\r\n            gesture.destroy();\r\n            pointerEvents.destroy();\r\n        }\r\n    };\r\n};\r\nconst calcGestureData = (detail, ev) => {\r\n    if (!ev) {\r\n        return;\r\n    }\r\n    const prevX = detail.currentX;\r\n    const prevY = detail.currentY;\r\n    const prevT = detail.timeStamp;\r\n    updateDetail(ev, detail);\r\n    const currentX = detail.currentX;\r\n    const currentY = detail.currentY;\r\n    const timestamp = detail.timeStamp = now(ev);\r\n    const timeDelta = timestamp - prevT;\r\n    if (timeDelta > 0 && timeDelta < 100) {\r\n        const velocityX = (currentX - prevX) / timeDelta;\r\n        const velocityY = (currentY - prevY) / timeDelta;\r\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\r\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\r\n    }\r\n    detail.deltaX = currentX - detail.startX;\r\n    detail.deltaY = currentY - detail.startY;\r\n    detail.event = ev;\r\n};\r\nconst updateDetail = (ev, detail) => {\r\n    // get X coordinates for either a mouse click\r\n    // or a touch depending on the given event\r\n    let x = 0;\r\n    let y = 0;\r\n    if (ev) {\r\n        const changedTouches = ev.changedTouches;\r\n        if (changedTouches && changedTouches.length > 0) {\r\n            const touch = changedTouches[0];\r\n            x = touch.clientX;\r\n            y = touch.clientY;\r\n        }\r\n        else if (ev.pageX !== undefined) {\r\n            x = ev.pageX;\r\n            y = ev.pageY;\r\n        }\r\n    }\r\n    detail.currentX = x;\r\n    detail.currentY = y;\r\n};\r\nconst now = (ev) => {\r\n    return ev.timeStamp || Date.now();\r\n};\n\nexport { GESTURE_CONTROLLER, createGesture };\n"]}