{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-input-ios.entry.js"],"names":["Input","hostRef","inputId","inputIds","didBlurAfterEdit","hasFocus","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","debounce","disabled","name","readonly","required","spellcheck","type","value","onInput","ev","input","target","ionInput","emit","onBlur","focusChanged","emitStyle","ionBlur","onFocus","ionFocus","onKeydown","clearOnEdit","hasValue","clearTextInput","preventDefault","stopPropagation","nativeInput","ionChange","ionInputDidLoad","ionInputDidUnload","ionStyle","undefined","debounceChanged","focus","Promise","resolve","placeholder","getValue","length","mode","Object","assign","color","labelId","label","el","id","ref","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","inputMode","inputmode","min","max","minLength","minlength","maxLength","maxlength","multiple","pattern","readOnly","spellCheck","step","size","onKeyDown","tabindex","onTouchStart","onMouseDown","hostData","__stencil_render"],"mappings":"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","file":"30-es5.js","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './chunk-84f6bf13.js';\nimport './chunk-1074393c.js';\nimport { c as createColorClasses } from './chunk-ba834eff.js';\nimport { d as debounceEvent, f as findItemLabel } from './chunk-c90aaa66.js';\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nclass Input {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-input-${inputIds++}`;\n        this.didBlurAfterEdit = false;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'off';\n        /**\n         * Indicates whether the value of the control can be automatically completed by the browser.\n         */\n        this.autocomplete = 'off';\n        /**\n         * Whether auto correction should be enabled when the user is entering/editing the text value.\n         */\n        this.autocorrect = 'off';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n         */\n        this.clearInput = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the input.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * The type of control to display. The default type is text.\n         */\n        this.type = 'text';\n        /**\n         * The value of the input.\n         */\n        this.value = '';\n        this.onInput = (ev) => {\n            const input = ev.target;\n            if (input) {\n                this.value = input.value || '';\n            }\n            this.ionInput.emit(ev);\n        };\n        this.onBlur = () => {\n            this.hasFocus = false;\n            this.focusChanged();\n            this.emitStyle();\n            this.ionBlur.emit();\n        };\n        this.onFocus = () => {\n            this.hasFocus = true;\n            this.focusChanged();\n            this.emitStyle();\n            this.ionFocus.emit();\n        };\n        this.onKeydown = () => {\n            if (this.clearOnEdit) {\n                // Did the input value change after it was blurred and edited?\n                if (this.didBlurAfterEdit && this.hasValue()) {\n                    // Clear the input\n                    this.clearTextInput();\n                }\n                // Reset the flag\n                this.didBlurAfterEdit = false;\n            }\n        };\n        this.clearTextInput = (ev) => {\n            if (this.clearInput && !this.readonly && !this.disabled && ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n            this.value = '';\n            /**\n             * This is needed for clearOnEdit\n             * Otherwise the value will not be cleared\n             * if user is inside the input\n             */\n            if (this.nativeInput) {\n                this.nativeInput.value = '';\n            }\n        };\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionInputDidLoad = createEvent(this, \"ionInputDidLoad\", 7);\n        this.ionInputDidUnload = createEvent(this, \"ionInputDidUnload\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    debounceChanged() {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    /**\n     * Update the native input element when the value changes\n     */\n    valueChanged() {\n        this.emitStyle();\n        this.ionChange.emit({ value: this.value });\n    }\n    componentWillLoad() {\n        // By default, password inputs clear after focus when they have content\n        if (this.clearOnEdit === undefined && this.type === 'password') {\n            this.clearOnEdit = true;\n        }\n        this.emitStyle();\n    }\n    componentDidLoad() {\n        this.debounceChanged();\n        this.ionInputDidLoad.emit();\n    }\n    componentDidUnload() {\n        this.ionInputDidUnload.emit();\n    }\n    /**\n     * Sets focus on the specified `ion-input`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n    /**\n     * Returns the native `<input>` element used under the hood.\n     */\n    getInputElement() {\n        return Promise.resolve(this.nativeInput);\n    }\n    getValue() {\n        return this.value || '';\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'input': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    focusChanged() {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n    }\n    hasValue() {\n        return this.getValue().length > 0;\n    }\n    hostData() {\n        const mode = getIonMode(this);\n        return {\n            'aria-disabled': this.disabled ? 'true' : null,\n            class: Object.assign({}, createColorClasses(this.color), { [mode]: true, 'has-value': this.hasValue(), 'has-focus': this.hasFocus })\n        };\n    }\n    __stencil_render() {\n        const value = this.getValue();\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return [\n            h(\"input\", { class: \"native-input\", ref: input => this.nativeInput = input, \"aria-labelledby\": labelId, disabled: this.disabled, accept: this.accept, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, step: this.step, size: this.size, type: this.type, value: value, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown }),\n            (this.clearInput && !this.readonly && !this.disabled) && h(\"button\", { type: \"button\", class: \"input-clear-icon\", tabindex: \"-1\", onTouchStart: this.clearTextInput, onMouseDown: this.clearTextInput })\n        ];\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n    render() { return h(Host, this.hostData(), this.__stencil_render()); }\n    static get style() { return \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0!important;background:var(--background);color:var(--color);font-family:var(--ion-font-family,inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label), ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios, [dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios, [dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:50%;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.has-focus.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios, .has-focus.sc-ion-input-ios-h button.sc-ion-input-ios, .has-focus.sc-ion-input-ios-h input.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-floating.sc-ion-input-ios-h, .item-label-floating .sc-ion-input-ios-h, .item-label-stacked.sc-ion-input-ios-h, .item-label-stacked .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20viewBox=\\'0%200%20512%20512\\'><path%20fill=\\'var(--ion-color-step-600,%20%23666666)\\'%20d=\\'M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z\\'/></svg>\\\");width:30px;height:30px;background-size:18px}\"; }\n}\nlet inputIds = 0;\n\nexport { Input as ion_input };\n"]}